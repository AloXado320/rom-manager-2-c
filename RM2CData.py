import struct
#This file will house all the data I need such as bank locations or level IDs.

#skip ending for now because script inf loops or something idk
#needs investigation
Num2LevelName = {
    4:'bbh',
    5:"ccm",
    7:'hmc',
    8:'ssl',
    9:'bob',
    10:'sl',
    11:'wdw',
    12:'jrb',
    13:'thi',
    14:'ttc',
    15:'rr',
    16:"castle_grounds",
    17:'bitdw',
    18:'vcutm',
    19:'bitfs',
    20:'sa',
    21:'bits',
    22:'lll',
    23:'ddd',
    24:'wf',
    25:'ending',
    26:'castle_courtyard',
    27:'pss',
    28:'cotmc',
    29:'totwc',
    30:'bowser_1',
    31:'wmotr',
    33:'bowser_2',
    34:'bowser_3',
    36:'ttm'
}

#Levelname uses a different castle inside name which is dumb
Num2Name = {6:'castle_inside',**Num2LevelName}

#level specific banks have different addresses than vanilla, so I need a dict for them.

#all skyboxes are in bank 0xA
#in cmd, it goes:
#LOAD_MIO0(0xA,str+SegmentRomStart,str+SegmentRomEnd)
skyboxesRM = {
	0xB35770:'_water_skybox_mio0',
	0xB5D8B0:'_ccm_skybox_mio0',
	0xBEADB0:'_clouds_skybox_mio0',
	0xBA2330:'_bitfs_skybox_mio0',
	0xBC2C70:'_wdw_skybox_mio0',
	0xB859F0:'_cloud_floor_skybox_mio0',
	0xC12EF0:'_ssl_skybox_mio0',
	0xC3B030:'_bbh_skybox_mio0',
	0xC57970:'_bidw_skybox_mio0',
	0xC7FAB0:'_bits_skybox_mio0'
}
skyboxesEditor = {
	0xB35715:'_water_skybox_mio0',
	0xB5D855:'_ccm_skybox_mio0',
	0xBEAD55:'_cloud_floor_skybox_mio0',
	0xBA22D5:'_bitfs_skybox_mio0',
	0xBC2C15:'_wdw_skybox_mio0',
	0xB85995:'_clouds_skybox_mio0',
	0xC12E95:'_ssl_skybox_mio0',
	0xC3AFD5:'_bbh_skybox_mio0',
	0xC57915:'_bidw_skybox_mio0',
	0xC7FA55:'_bits_skybox_mio0'
}

#Bank 0xB loads
TextureBanks = {

}

#seg 7 is menu, aka file/star select
#format is name,seg addr,size. All textures are RGBA16 fmt
Seg7Textures=[
['main_menu_seg7.0D1A8.rgba16',0xBCE0,(64,32),0x1000],
['main_menu_seg7.0E1A8.rgba16',0xCCE0,(64,32),0x1000],
['main_menu_seg7.00018.rgba16',0x18,(32,32),0x800],
['main_menu_seg7.00818.rgba16',0x818,(32,32),0x800],
['main_menu_seg7.01018.rgba16',0x1018,(64,32),0x1000],
['main_menu_seg7.02018.rgba16',0x2018,(64,32),0x1000],
['main_menu_seg7.03468.rgba16',0x3468,(32,32),0x800],
['main_menu_seg7.03C68.rgba16',0x3C68,(32,32),0x800],
['main_menu_seg7.04468.rgba16',0x4468,(32,32),0x800],
['main_menu_seg7.04C68.rgba16',0x4C68,(32,32),0x800],
['main_menu_seg7.05468.rgba16',0x5468,(32,32),0x800],
['main_menu_seg7.06328.rgba16',0x6328,(32,32),0x800],
['main_menu_seg7.06B28.rgba16',0x6B28,(32,32),0x800]
]


#seg2 glyphs have holes in them because they're left out in NA.
#This is a list of glyphs to 'skip' which means increase name by 0x200
Seg2Glpyhs={0x2600:0x200,
0x3200:0x200,
0x3A00:0x200,
0x3C00:0x200,
0x3E00:0x200,
0x4200:0xA00
}

#[loc,name,size,len]
Seg2WarpTransDat=[
	[0x122b8,'0F458',(32,64),0x800],
	[0x12Ab8,'0FC58',(32,64),0x800],
	[0x132b8,'10458',(64,64),0x1000],
	[0x142b8,'11458',(32,64),0x800]]

#name of actor group, bank gfx is in, bank geo is in
#for gfx it goes:
#LOAD_MIO0(bank,'_'+str+'_mio0SegmentRomStart',same w/ end)
#for geo it goes:
#LOAD_RAW(bank,'_'+str+'_geoSegmentRomStart',same w/ end)
#I will identify which are used by geo bank starts
#the last member is the global scripts to include after loading
#the bank
Groups = {
	0x1279B0:['_group0', 5, 12,'script_func_global_2'], #Mario Bank 4/17 which is always loaded
	0x132850:['_group1', 5, 12,'script_func_global_2'],
	0x134a70:['_group2', 5, 12,'script_func_global_3'],
	0x13B5D0:['_group3', 5, 12,'script_func_global_4'],
	0x145C10:['_group4', 5, 12,'script_func_global_5'],
	0x151B70:['_group5', 5, 12,'script_func_global_6'],
	0x1602E0:['_group6', 5, 12,'script_func_global_7'],
	0x1656E0:['_group7', 5, 12,'script_func_global_8'],
	0x166BD0:['_group8', 5, 12,'script_func_global_9'],
	0x16D5C0:['_group9', 5, 12,'script_func_global_10'],
	0x180540:['_group10', 5, 12,'script_func_global_11'],
	0x187FA0:['_group11', 5, 12,'script_func_global_12'],
	0x1B9070:['_group12', 6, 13,'script_func_global_13'],
	0x1C3DB0:['_group13', 6, 13,'script_func_global_14'],
	0x1D7C90:['_group14', 6, 13,'script_func_global_15'],
	0x1E4BF0:['_group15', 6, 13,'script_func_global_16'],
	0x1E7D90:['_group16', 6, 13,'script_func_global_17'],
	0x1F1B30:['_group17', 6, 13,'script_func_global_18'],
	0x2008D0:['_common0', 8, 15,'script_func_global_1'],
	0x218DA0:['_common1', 8, 15,'script_func_global_1']#Bank 3/16, which is always loaded, so the extra stuff is pointless.
}


Group_Models = """
    LOAD_MODEL_FROM_GEO(MODEL_MARIO,                   mario_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SMOKE,                   smoke_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SPARKLES,                sparkles_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BUBBLE,                  bubble_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SMALL_WATER_SPLASH,      small_water_splash_geo),
    LOAD_MODEL_FROM_GEO(MODEL_IDLE_WATER_WAVE,         idle_water_wave_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WATER_SPLASH,            water_splash_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WAVE_TRAIL,              wave_trail_geo),
    LOAD_MODEL_FROM_GEO(MODEL_YELLOW_COIN,             yellow_coin_geo),
    LOAD_MODEL_FROM_GEO(MODEL_STAR,                    star_geo),
    LOAD_MODEL_FROM_GEO(MODEL_TRANSPARENT_STAR,        transparent_star_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WOODEN_SIGNPOST,         wooden_signpost_geo),
    LOAD_MODEL_FROM_DL( MODEL_WHITE_PARTICLE_SMALL,    white_particle_small_dl,     LAYER_ALPHA),
    LOAD_MODEL_FROM_GEO(MODEL_RED_FLAME,               red_flame_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BLUE_FLAME,              blue_flame_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BURN_SMOKE,              burn_smoke_geo),
    LOAD_MODEL_FROM_GEO(MODEL_LEAVES,                  leaves_geo),
    LOAD_MODEL_FROM_GEO(MODEL_PURPLE_MARBLE,           purple_marble_geo),
    LOAD_MODEL_FROM_GEO(MODEL_FISH,                    fish_geo),
    LOAD_MODEL_FROM_GEO(MODEL_FISH_SHADOW,             fish_shadow_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SPARKLES_ANIMATION,      sparkles_animation_geo),
    LOAD_MODEL_FROM_DL( MODEL_SAND_DUST,               sand_seg3_dl_0302BCD0,       LAYER_ALPHA),
    LOAD_MODEL_FROM_GEO(MODEL_BUTTERFLY,               butterfly_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BURN_SMOKE_UNUSED,       burn_smoke_geo),
    LOAD_MODEL_FROM_DL( MODEL_PEBBLE,                  pebble_seg3_dl_0301CB00,     LAYER_ALPHA),
    LOAD_MODEL_FROM_GEO(MODEL_MIST,                    mist_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WHITE_PUFF,              white_puff_geo),
    LOAD_MODEL_FROM_DL( MODEL_WHITE_PARTICLE_DL,       white_particle_dl,           LAYER_ALPHA),
    LOAD_MODEL_FROM_GEO(MODEL_WHITE_PARTICLE,          white_particle_geo),
    LOAD_MODEL_FROM_GEO(MODEL_YELLOW_COIN_NO_SHADOW,   yellow_coin_no_shadow_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BLUE_COIN,               blue_coin_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BLUE_COIN_NO_SHADOW,     blue_coin_no_shadow_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MARIOS_WINGED_METAL_CAP, marios_winged_metal_cap_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MARIOS_METAL_CAP,        marios_metal_cap_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MARIOS_WING_CAP,         marios_wing_cap_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MARIOS_CAP,              marios_cap_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MARIOS_CAP,              marios_cap_geo), // repeated
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_KEY_CUTSCENE,     bowser_key_cutscene_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_KEY,              bowser_key_geo),
    LOAD_MODEL_FROM_GEO(MODEL_RED_FLAME_SHADOW,        red_flame_shadow_geo),
    LOAD_MODEL_FROM_GEO(MODEL_1UP,                     mushroom_1up_geo),
    LOAD_MODEL_FROM_GEO(MODEL_RED_COIN,                red_coin_geo),
    LOAD_MODEL_FROM_GEO(MODEL_RED_COIN_NO_SHADOW,      red_coin_no_shadow_geo),
    LOAD_MODEL_FROM_GEO(MODEL_NUMBER,                  number_geo),
    LOAD_MODEL_FROM_GEO(MODEL_EXPLOSION,               explosion_geo),
    LOAD_MODEL_FROM_GEO(MODEL_DIRT_ANIMATION,          dirt_animation_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CARTOON_STAR,            cartoon_star_geo)
    LOAD_MODEL_FROM_GEO(MODEL_BLUE_COIN_SWITCH,        blue_coin_switch_geo),
    LOAD_MODEL_FROM_GEO(MODEL_AMP,                     amp_geo),
    LOAD_MODEL_FROM_GEO(MODEL_PURPLE_SWITCH,           purple_switch_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CHECKERBOARD_PLATFORM,   checkerboard_platform_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BREAKABLE_BOX,           breakable_box_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BREAKABLE_BOX_SMALL,     breakable_box_small_geo),
    LOAD_MODEL_FROM_GEO(MODEL_EXCLAMATION_BOX_OUTLINE, exclamation_box_outline_geo),
    LOAD_MODEL_FROM_GEO(MODEL_EXCLAMATION_BOX,         exclamation_box_geo),
    LOAD_MODEL_FROM_GEO(MODEL_GOOMBA,                  goomba_geo),
    LOAD_MODEL_FROM_DL( MODEL_EXCLAMATION_POINT,       exclamation_box_outline_seg8_dl_08025F08, LAYER_ALPHA),
    LOAD_MODEL_FROM_GEO(87,              springboard_bottom_geo),
    LOAD_MODEL_FROM_GEO(MODEL_KOOPA_SHELL,             koopa_shell_geo),
    LOAD_MODEL_FROM_GEO(MODEL_METAL_BOX,               metal_box_geo),
    LOAD_MODEL_FROM_DL( MODEL_METAL_BOX_DL,            metal_box_dl,                             LAYER_OPAQUE),
    LOAD_MODEL_FROM_GEO(MODEL_BLACK_BOBOMB,            black_bobomb_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOBOMB_BUDDY,            bobomb_buddy_geo),
    LOAD_MODEL_FROM_DL( MODEL_DL_CANNON_LID,           cannon_lid_seg8_dl_080048E0,              LAYER_OPAQUE),
    LOAD_MODEL_FROM_GEO(MODEL_BOWLING_BALL,            bowling_ball_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CANNON_BARREL,           cannon_barrel_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CANNON_BASE,             cannon_base_geo),
    LOAD_MODEL_FROM_GEO(MODEL_HEART,                   heart_geo),
    LOAD_MODEL_FROM_GEO(MODEL_FLYGUY,                  flyguy_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CHUCKYA,                 chuckya_geo),
    LOAD_MODEL_FROM_GEO(MODEL_TRAJECTORY_MARKER_BALL,      bowling_ball_track_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BULLET_BILL,             bullet_bill_geo),
    LOAD_MODEL_FROM_GEO(MODEL_YELLOW_SPHERE,           yellow_sphere_geo),
    LOAD_MODEL_FROM_GEO(MODEL_HOOT,                    hoot_geo),
    LOAD_MODEL_FROM_GEO(MODEL_YOSHI_EGG,               yoshi_egg_geo),
    LOAD_MODEL_FROM_GEO(MODEL_THWOMP,                  thwomp_geo),
    LOAD_MODEL_FROM_GEO(MODEL_HEAVE_HO,                heave_ho_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BLARGG,                  blargg_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BULLY,                   bully_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BULLY_BOSS,              bully_boss_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WATER_BOMB,              water_bomb_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WATER_BOMB_SHADOW,       water_bomb_shadow_geo),
    LOAD_MODEL_FROM_GEO(MODEL_KING_BOBOMB,             king_bobomb_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MANTA_RAY,               manta_seg5_geo_05008D14),
    LOAD_MODEL_FROM_GEO(MODEL_UNAGI,                   unagi_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SUSHI,                   sushi_geo),
    LOAD_MODEL_FROM_DL( MODEL_DL_WHIRLPOOL,            whirlpool_seg5_dl_05013CB8, LAYER_TRANSPARENT),
    LOAD_MODEL_FROM_GEO(MODEL_CLAM_SHELL,              clam_shell_geo),
    LOAD_MODEL_FROM_GEO(MODEL_POKEY_HEAD,              pokey_head_geo),
    LOAD_MODEL_FROM_GEO(MODEL_POKEY_BODY_PART,         pokey_body_part_geo),
    LOAD_MODEL_FROM_GEO(MODEL_TWEESTER,                tweester_geo),
    LOAD_MODEL_FROM_GEO(MODEL_KLEPTO,                  klepto_geo),
    LOAD_MODEL_FROM_GEO(MODEL_EYEROK_LEFT_HAND,        eyerok_left_hand_geo),
    LOAD_MODEL_FROM_GEO(MODEL_EYEROK_RIGHT_HAND,       eyerok_right_hand_geo),
    LOAD_MODEL_FROM_DL( MODEL_DL_MONTY_MOLE_HOLE,      monty_mole_hole_seg5_dl_05000840, LAYER_TRANSPARENT_DECAL),
    LOAD_MODEL_FROM_GEO(MODEL_MONTY_MOLE,              monty_mole_geo),
    LOAD_MODEL_FROM_GEO(MODEL_UKIKI,                   ukiki_geo),
    LOAD_MODEL_FROM_GEO(MODEL_FWOOSH,                  fwoosh_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SPINDRIFT,               spindrift_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MR_BLIZZARD_HIDDEN,      mr_blizzard_hidden_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MR_BLIZZARD,             mr_blizzard_geo),
    LOAD_MODEL_FROM_GEO(MODEL_PENGUIN,                 penguin_geo),
    LOAD_MODEL_FROM_DL( MODEL_CAP_SWITCH_EXCLAMATION,  cap_switch_exclamation_seg5_dl_05002E00, LAYER_ALPHA),
    LOAD_MODEL_FROM_GEO(MODEL_CAP_SWITCH,              cap_switch_geo),
    LOAD_MODEL_FROM_DL( MODEL_CAP_SWITCH_BASE,         cap_switch_base_seg5_dl_05003120,        LAYER_OPAQUE),
    LOAD_MODEL_FROM_GEO(MODEL_BOO,                     boo_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BETA_BOO_KEY,               small_key_geo),
    LOAD_MODEL_FROM_GEO(MODEL_HAUNTED_CHAIR,           haunted_chair_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MAD_PIANO,               mad_piano_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOOKEND_PART,            bookend_part_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOOKEND,                 bookend_geo),
    LOAD_MODEL_FROM_GEO(MODEL_HAUNTED_CAGE,            haunted_cage_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BIRDS,                   birds_geo),
    LOAD_MODEL_FROM_GEO(MODEL_PEACH,                   peach_geo),
    LOAD_MODEL_FROM_GEO(MODEL_YOSHI,                   yoshi_geo),
    LOAD_MODEL_FROM_GEO(MODEL_ENEMY_LAKITU,            enemy_lakitu_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SPINY_BALL,              spiny_ball_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SPINY,                   spiny_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WIGGLER_HEAD,            wiggler_head_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WIGGLER_BODY,            wiggler_body_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BUBBA,                   bubba_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER,                  bowser_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_BOMB_CHILD_OBJ,   bowser_bomb_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_BOMB,             bowser_bomb_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_SMOKE,            bowser_impact_smoke_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_FLAMES,           bowser_flames_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_WAVE,             invisible_bowser_accessory_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER2,                 bowser2_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BUB,                     bub_geo),
    LOAD_MODEL_FROM_GEO(MODEL_TREASURE_CHEST_BASE,     treasure_chest_base_geo),
    LOAD_MODEL_FROM_GEO(MODEL_TREASURE_CHEST_LID,      treasure_chest_lid_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CYAN_FISH,               cyan_fish_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WATER_RING,              water_ring_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WATER_MINE,              water_mine_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SEAWEED,                 seaweed_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SKEETER,                 skeeter_geo),
    LOAD_MODEL_FROM_GEO(MODEL_PIRANHA_PLANT,           piranha_plant_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WHOMP,                   whomp_geo),
    LOAD_MODEL_FROM_GEO(MODEL_KOOPA_WITH_SHELL,        koopa_with_shell_geo),
    LOAD_MODEL_FROM_GEO(MODEL_KOOPA_WITHOUT_SHELL,     koopa_without_shell_geo),
    LOAD_MODEL_FROM_GEO(MODEL_METALLIC_BALL,           metallic_ball_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CHAIN_CHOMP,             chain_chomp_geo),
    LOAD_MODEL_FROM_GEO(MODEL_KOOPA_FLAG,              koopa_flag_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WOODEN_POST,             wooden_post_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MIPS,                    mips_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOO_CASTLE,              boo_castle_geo),
    LOAD_MODEL_FROM_GEO(MODEL_LAKITU,                  lakitu_geo),
    LOAD_MODEL_FROM_GEO(MODEL_TOAD,                    toad_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CHILL_BULLY,             chilly_chief_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BIG_CHILL_BULLY,         chilly_chief_big_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MONEYBAG,                moneybag_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SWOOP,                   swoop_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SCUTTLEBUG,              scuttlebug_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MR_I_IRIS,               mr_i_iris_geo),
    LOAD_MODEL_FROM_GEO(MODEL_MR_I,                    mr_i_geo),
    LOAD_MODEL_FROM_GEO(MODEL_DORRIE,                  dorrie_geo),
    LOAD_MODEL_FROM_GEO(MODEL_SNUFIT,                  snufit_geo),"""

#addresses of banks for each specific level, just using RM start addr
LevelSpecificBanks = {
    0x00DB1610:'bbh',
    0x00DE0460:"ccm",
    0x00E0BC10:'castle_inside',
    0x00E8CD30:'hmc',
    0x00EC06A0:'ssl',
    0x00EF0F50:'bob',
    0x00F0A720:'sl',
    0x00F221B0:'wdw',
    0x00F42940:'jrb',
    0x00F5BCF0:'thi',
    0x00F720B0:'ttc',
    0x00F90AD0:'rr',
    0x00FC7950:"castle_grounds",
    0x00FE11D0:'bitdw',
    0x00FF9000:'vcutm',
    0x0100BCD0:'bitfs',
    0x01034C10:'bits',
    0x01058410:'lll',
    0x01088CE0:'ddd',
    0x010A09F0:'wf',
    0x010E9B60:'castle_courtyard',
    0x01125A30:'totwc',
    0x0115C680:'bowser_2',
    0x01166220:'bowser_3',
    0x011732E0:'ttm'
}
#models to load for each level specific bank
LevelSpecificModels = {
    "ccm":"""LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03, ccm_geo_00042C),
LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04, ccm_geo_00045C),
LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_05, ccm_geo_000494),
LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_06, ccm_geo_0004BC),
LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_07, ccm_geo_0004E4),
LOAD_MODEL_FROM_GEO(MODEL_CCM_CABIN_DOOR,    cabin_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_CCM_SNOW_TREE,     snow_tree_geo),
LOAD_MODEL_FROM_GEO(MODEL_CCM_ROPEWAY_LIFT,  ccm_geo_0003D0),
LOAD_MODEL_FROM_GEO(MODEL_CCM_SNOWMAN_BASE,  ccm_geo_0003F0),
LOAD_MODEL_FROM_GEO(MODEL_CCM_SNOWMAN_HEAD,  ccm_geo_00040C),
""",
	'bbh':"""LOAD_MODEL_FROM_GEO(MODEL_BBH_HAUNTED_DOOR,           haunted_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_BBH_STAIRCASE_STEP,         geo_bbh_0005B0),
LOAD_MODEL_FROM_GEO(MODEL_BBH_TILTING_FLOOR_PLATFORM, geo_bbh_0005C8),
LOAD_MODEL_FROM_GEO(MODEL_BBH_TUMBLING_PLATFORM,      geo_bbh_0005E0),
LOAD_MODEL_FROM_GEO(MODEL_BBH_TUMBLING_PLATFORM_PART, geo_bbh_0005F8),
LOAD_MODEL_FROM_GEO(MODEL_BBH_MOVING_BOOKSHELF,       geo_bbh_000610),
LOAD_MODEL_FROM_GEO(MODEL_BBH_MESH_ELEVATOR,          geo_bbh_000628),
LOAD_MODEL_FROM_GEO(MODEL_BBH_MERRY_GO_ROUND,         geo_bbh_000640),
LOAD_MODEL_FROM_GEO(MODEL_BBH_WOODEN_TOMB,            geo_bbh_000658),
""",
    'castle_inside':"""LOAD_MODEL_FROM_GEO(MODEL_CASTLE_BOWSER_TRAP,        castle_geo_000F18),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_WATER_LEVEL_PILLAR, castle_geo_001940),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_CLOCK_MINUTE_HAND,  castle_geo_001530),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_CLOCK_HOUR_HAND,    castle_geo_001548),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_CLOCK_PENDULUM,     castle_geo_001518),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_CASTLE_DOOR,        castle_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_WOODEN_DOOR,        wooden_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_METAL_DOOR,         metal_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_CASTLE_DOOR_UNUSED, castle_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_WOODEN_DOOR_UNUSED, wooden_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_DOOR_0_STARS,       castle_door_0_star_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_DOOR_1_STAR,        castle_door_1_star_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_DOOR_3_STARS,       castle_door_3_stars_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_KEY_DOOR,           key_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_STAR_DOOR_30_STARS, castle_geo_000F00),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_STAR_DOOR_8_STARS,  castle_geo_000F00),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_STAR_DOOR_50_STARS, castle_geo_000F00),
LOAD_MODEL_FROM_GEO(MODEL_CASTLE_STAR_DOOR_70_STARS, castle_geo_000F00),
""",
    'hmc':"""LOAD_MODEL_FROM_GEO(MODEL_HMC_WOODEN_DOOR,          wooden_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_HMC_METAL_DOOR,           metal_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_HMC_HAZY_MAZE_DOOR,       hazy_maze_door_geo),
LOAD_MODEL_FROM_GEO(MODEL_HMC_METAL_PLATFORM,       hmc_geo_0005A0),
LOAD_MODEL_FROM_GEO(MODEL_HMC_METAL_ARROW_PLATFORM, hmc_geo_0005B8),
LOAD_MODEL_FROM_GEO(MODEL_HMC_ELEVATOR_PLATFORM,    hmc_geo_0005D0),
LOAD_MODEL_FROM_GEO(MODEL_HMC_ROLLING_ROCK,         hmc_geo_000548),
LOAD_MODEL_FROM_GEO(MODEL_HMC_ROCK_PIECE,           hmc_geo_000570),
LOAD_MODEL_FROM_GEO(MODEL_HMC_ROCK_SMALL_PIECE,     hmc_geo_000588),
LOAD_MODEL_FROM_GEO(MODEL_HMC_RED_GRILLS,           hmc_geo_000530),
""",
    'ssl':"""LOAD_MODEL_FROM_GEO(MODEL_SSL_PALM_TREE,           palm_tree_geo),
LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,       ssl_geo_0005C0),
LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04,       ssl_geo_0005D8),
LOAD_MODEL_FROM_GEO(MODEL_SSL_PYRAMID_TOP,         ssl_geo_000618),
LOAD_MODEL_FROM_GEO(MODEL_SSL_GRINDEL,             ssl_geo_000734),
LOAD_MODEL_FROM_GEO(MODEL_SSL_SPINDEL,             ssl_geo_000764),
LOAD_MODEL_FROM_GEO(MODEL_SSL_MOVING_PYRAMID_WALL, ssl_geo_000794),
LOAD_MODEL_FROM_GEO(MODEL_SSL_PYRAMID_ELEVATOR,    ssl_geo_0007AC),
LOAD_MODEL_FROM_GEO(MODEL_SSL_TOX_BOX,             ssl_geo_000630),
""",
    'bob':"""LOAD_MODEL_FROM_GEO(MODEL_BOB_BUBBLY_TREE,      bubbly_tree_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BOB_CHAIN_CHOMP_GATE, bob_geo_000440),
    LOAD_MODEL_FROM_GEO(MODEL_BOB_SEESAW_PLATFORM,  bob_geo_000458),
    LOAD_MODEL_FROM_GEO(MODEL_BOB_BARS_GRILLS,      bob_geo_000470),
""",
    'sl':"""LOAD_MODEL_FROM_GEO(MODEL_SL_SNOW_TRIANGLE,      sl_geo_000390),
    LOAD_MODEL_FROM_GEO(MODEL_SL_CRACKED_ICE,        sl_geo_000360),
    LOAD_MODEL_FROM_GEO(MODEL_SL_CRACKED_ICE_CHUNK,  sl_geo_000378),
    LOAD_MODEL_FROM_GEO(MODEL_SL_SNOW_TREE,          snow_tree_geo),
""",
    'wdw':"""LOAD_MODEL_FROM_GEO(MODEL_WDW_BUBBLY_TREE,                   bubbly_tree_geo),
    LOAD_MODEL_FROM_GEO(MODEL_WDW_SQUARE_FLOATING_PLATFORM,      wdw_geo_000580),
    LOAD_MODEL_FROM_GEO(MODEL_WDW_ARROW_LIFT,                    wdw_geo_000598),
    LOAD_MODEL_FROM_GEO(MODEL_WDW_WATER_LEVEL_DIAMOND,           wdw_geo_0005C0),
    LOAD_MODEL_FROM_GEO(MODEL_WDW_HIDDEN_PLATFORM,               wdw_geo_0005E8),
    LOAD_MODEL_FROM_GEO(MODEL_WDW_EXPRESS_ELEVATOR,              wdw_geo_000610),
    LOAD_MODEL_FROM_GEO(MODEL_WDW_RECTANGULAR_FLOATING_PLATFORM, wdw_geo_000628),
    LOAD_MODEL_FROM_GEO(MODEL_WDW_ROTATING_PLATFORM,             wdw_geo_000640),
""",
    'jrb':"""LOAD_MODEL_FROM_GEO(MODEL_JRB_SHIP_LEFT_HALF_PART,  jrb_geo_000978),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_SHIP_BACK_LEFT_PART,  jrb_geo_0009B0),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_SHIP_RIGHT_HALF_PART, jrb_geo_0009E8),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_SHIP_BACK_RIGHT_PART, jrb_geo_000A00),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_SUNKEN_SHIP,          jrb_geo_000990),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_SUNKEN_SHIP_BACK,     jrb_geo_0009C8),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_ROCK,                 jrb_geo_000930),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_SLIDING_BOX,          jrb_geo_000960),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_FALLING_PILLAR,       jrb_geo_000900),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_FALLING_PILLAR_BASE,  jrb_geo_000918),
    LOAD_MODEL_FROM_GEO(MODEL_JRB_FLOATING_PLATFORM,    jrb_geo_000948),
""",
    'thi':"""LOAD_MODEL_FROM_GEO(MODEL_THI_BUBBLY_TREE,     bubbly_tree_geo),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,   thi_geo_0005F0),
    LOAD_MODEL_FROM_GEO(MODEL_THI_WARP_PIPE,       warp_pipe_geo),
    LOAD_MODEL_FROM_GEO(MODEL_THI_HUGE_ISLAND_TOP, thi_geo_0005B0),
    LOAD_MODEL_FROM_GEO(MODEL_THI_TINY_ISLAND_TOP, thi_geo_0005C8),
""",
    'ttc':"""LOAD_MODEL_FROM_GEO(MODEL_TTC_ROTATING_CUBE,     ttc_geo_000240),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_ROTATING_PRISM,    ttc_geo_000258),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_PENDULUM,          ttc_geo_000270),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_LARGE_TREADMILL,   ttc_geo_000288),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_SMALL_TREADMILL,   ttc_geo_0002A8),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_PUSH_BLOCK,        ttc_geo_0002C8),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_ROTATING_HEXAGON,  ttc_geo_0002E0),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_ROTATING_TRIANGLE, ttc_geo_0002F8),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_PIT_BLOCK,         ttc_geo_000310),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_PIT_BLOCK_UNUSED,  ttc_geo_000328),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_ELEVATOR_PLATFORM, ttc_geo_000340),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_CLOCK_HAND,        ttc_geo_000358),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_SPINNER,           ttc_geo_000370),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_SMALL_GEAR,        ttc_geo_000388),
    LOAD_MODEL_FROM_GEO(MODEL_TTC_LARGE_GEAR,        ttc_geo_0003A0),
""",
    'rr':"""LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,           rr_geo_000660),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04,           rr_geo_000678),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_05,           rr_geo_000690),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_06,           rr_geo_0006A8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_07,           rr_geo_0006C0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_08,           rr_geo_0006D8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_09,           rr_geo_0006F0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0A,           rr_geo_000708),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0B,           rr_geo_000720),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0C,           rr_geo_000738),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0D,           rr_geo_000758),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0E,           rr_geo_000770),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0F,           rr_geo_000788),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_10,           rr_geo_0007A0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_11,           rr_geo_0007B8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_12,           rr_geo_0007D0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_13,           rr_geo_0007E8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_14,           rr_geo_000800),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_15,           rr_geo_000818),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_16,           rr_geo_000830),
    LOAD_MODEL_FROM_GEO(MODEL_RR_SLIDING_PLATFORM,         rr_geo_0008C0),
    LOAD_MODEL_FROM_GEO(MODEL_RR_FLYING_CARPET,            rr_geo_000848),
    LOAD_MODEL_FROM_GEO(MODEL_RR_OCTAGONAL_PLATFORM,       rr_geo_0008A8),
    LOAD_MODEL_FROM_GEO(MODEL_RR_ROTATING_BRIDGE_PLATFORM, rr_geo_000878),
    LOAD_MODEL_FROM_GEO(MODEL_RR_TRIANGLE_PLATFORM,        rr_geo_0008D8),
    LOAD_MODEL_FROM_GEO(MODEL_RR_CRUISER_WING,             rr_geo_000890),
    LOAD_MODEL_FROM_GEO(MODEL_RR_SEESAW_PLATFORM,          rr_geo_000908),
    LOAD_MODEL_FROM_GEO(MODEL_RR_L_SHAPED_PLATFORM,        rr_geo_000940),
    LOAD_MODEL_FROM_GEO(MODEL_RR_SWINGING_PLATFORM,        rr_geo_000860),
    LOAD_MODEL_FROM_GEO(MODEL_RR_DONUT_PLATFORM,           rr_geo_000920),
    LOAD_MODEL_FROM_GEO(MODEL_RR_ELEVATOR_PLATFORM,        rr_geo_0008F0),
    LOAD_MODEL_FROM_GEO(MODEL_RR_TRICKY_TRIANGLES,         rr_geo_000958),
    LOAD_MODEL_FROM_GEO(MODEL_RR_TRICKY_TRIANGLES_FRAME1,  rr_geo_000970),
    LOAD_MODEL_FROM_GEO(MODEL_RR_TRICKY_TRIANGLES_FRAME2,  rr_geo_000988),
    LOAD_MODEL_FROM_GEO(MODEL_RR_TRICKY_TRIANGLES_FRAME3,  rr_geo_0009A0),
    LOAD_MODEL_FROM_GEO(MODEL_RR_TRICKY_TRIANGLES_FRAME4,  rr_geo_0009B8),
""",
    "castle_grounds":"""LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,           castle_grounds_geo_0006F4),
    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_BUBBLY_TREE,  bubbly_tree_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_WARP_PIPE,    warp_pipe_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CASTLE_DOOR,  castle_door_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_METAL_DOOR,   metal_door_geo),
    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  castle_grounds_geo_00070C),
    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_FLAG,         castle_grounds_geo_000660),
    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CANNON_GRILL, castle_grounds_geo_000724),
""",
    'bitdw':"""LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,       geo_bitdw_0003C0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04,       geo_bitdw_0003D8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_05,       geo_bitdw_0003F0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_06,       geo_bitdw_000408),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_07,       geo_bitdw_000420),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_08,       geo_bitdw_000438),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_09,       geo_bitdw_000450),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0A,       geo_bitdw_000468),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0B,       geo_bitdw_000480),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0C,       geo_bitdw_000498),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0D,       geo_bitdw_0004B0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0E,       geo_bitdw_0004C8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0F,       geo_bitdw_0004E0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_10,       geo_bitdw_0004F8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_11,       geo_bitdw_000510),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_WARP_PIPE,         warp_pipe_geo),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_SQUARE_PLATFORM,   geo_bitdw_000558),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_SEESAW_PLATFORM,   geo_bitdw_000540),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_SLIDING_PLATFORM,  geo_bitdw_000528),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_FERRIS_WHEEL_AXLE, geo_bitdw_000570),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_BLUE_PLATFORM,     geo_bitdw_000588),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_STAIRCASE_FRAME4,  geo_bitdw_0005A0),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_STAIRCASE_FRAME3,  geo_bitdw_0005B8),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_STAIRCASE_FRAME2,  geo_bitdw_0005D0),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_STAIRCASE_FRAME1,  geo_bitdw_0005E8),
    LOAD_MODEL_FROM_GEO(MODEL_BITDW_STAIRCASE,         geo_bitdw_000600),
""",
    'vcutm':"""LOAD_MODEL_FROM_GEO(MODEL_VCUTM_SEESAW_PLATFORM, vcutm_geo_0001F0),
""",
    'bitfs':"""LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,             bitfs_geo_0004B0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04,             bitfs_geo_0004C8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_05,             bitfs_geo_0004E0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_06,             bitfs_geo_0004F8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_07,             bitfs_geo_000510),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_08,             bitfs_geo_000528),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_09,             bitfs_geo_000540),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0A,             bitfs_geo_000558),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0B,             bitfs_geo_000570),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0C,             bitfs_geo_000588),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0D,             bitfs_geo_0005A0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0E,             bitfs_geo_0005B8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0F,             bitfs_geo_0005D0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_10,             bitfs_geo_0005E8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_11,             bitfs_geo_000600),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_12,             bitfs_geo_000618),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_13,             bitfs_geo_000630),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_14,             bitfs_geo_000648),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_15,             bitfs_geo_000660),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_PLATFORM_ON_TRACK,       bitfs_geo_000758),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_TILTING_SQUARE_PLATFORM, bitfs_geo_0006C0),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_SINKING_PLATFORMS,       bitfs_geo_000770),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_BLUE_POLE,               bitfs_geo_0006A8),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_SINKING_CAGE_PLATFORM,   bitfs_geo_000690),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_ELEVATOR,                bitfs_geo_000678),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_STRETCHING_PLATFORMS,    bitfs_geo_000708),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_SEESAW_PLATFORM,         bitfs_geo_000788),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_MOVING_SQUARE_PLATFORM,  bitfs_geo_000728),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_SLIDING_PLATFORM,        bitfs_geo_000740),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_TUMBLING_PLATFORM_PART,  bitfs_geo_0006D8),
    LOAD_MODEL_FROM_GEO(MODEL_BITFS_TUMBLING_PLATFORM,       bitfs_geo_0006F0),
""",
    'bits':"""LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,           bits_geo_000430),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04,           bits_geo_000448),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_05,           bits_geo_000460),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_06,           bits_geo_000478),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_07,           bits_geo_000490),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_08,           bits_geo_0004A8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_09,           bits_geo_0004C0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0A,           bits_geo_0004D8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0B,           bits_geo_0004F0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0C,           bits_geo_000508),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0D,           bits_geo_000520),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0E,           bits_geo_000538),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0F,           bits_geo_000550),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_10,           bits_geo_000568),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_11,           bits_geo_000580),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_12,           bits_geo_000598),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_13,           bits_geo_0005B0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_14,           bits_geo_0005C8),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_SLIDING_PLATFORM,       bits_geo_0005E0),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_TWIN_SLIDING_PLATFORMS, bits_geo_0005F8),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_OCTAGONAL_PLATFORM,     bits_geo_000610),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_BLUE_PLATFORM,          bits_geo_000628),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_FERRIS_WHEEL_AXLE,      bits_geo_000640),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_ARROW_PLATFORM,         bits_geo_000658),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_SEESAW_PLATFORM,        bits_geo_000670),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_TILTING_W_PLATFORM,     bits_geo_000688),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_STAIRCASE,              bits_geo_0006A0),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_STAIRCASE_FRAME1,       bits_geo_0006B8),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_STAIRCASE_FRAME2,       bits_geo_0006D0),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_STAIRCASE_FRAME3,       bits_geo_0006E8),
    LOAD_MODEL_FROM_GEO(MODEL_BITS_STAIRCASE_FRAME4,       bits_geo_000700),
""",
    'lll':"""LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,                  lll_geo_0009E0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04,                  lll_geo_0009F8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_05,                  lll_geo_000A10),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_06,                  lll_geo_000A28),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_07,                  lll_geo_000A40),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_08,                  lll_geo_000A60),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0A,                  lll_geo_000A90),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0B,                  lll_geo_000AA8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0C,                  lll_geo_000AC0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0D,                  lll_geo_000AD8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0E,                  lll_geo_000AF0),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_DRAWBRIDGE_PART,                lll_geo_000B20),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_ROTATING_BLOCK_FIRE_BARS,       lll_geo_000B38),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_ROTATING_HEXAGONAL_RING,        lll_geo_000BB0),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_SINKING_RECTANGULAR_PLATFORM,   lll_geo_000BC8),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_SINKING_SQUARE_PLATFORMS,       lll_geo_000BE0),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_TILTING_SQUARE_PLATFORM,        lll_geo_000BF8),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_1,                 lll_geo_000C10),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_2,                 lll_geo_000C30),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_3,                 lll_geo_000C50),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_4,                 lll_geo_000C70),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_5,                 lll_geo_000C90),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_6,                 lll_geo_000CB0),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_7,                 lll_geo_000CD0),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_8,                 lll_geo_000CF0),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_9,                 lll_geo_000D10),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_10,                lll_geo_000D30),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_11,                lll_geo_000D50),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_12,                lll_geo_000D70),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_13,                lll_geo_000D90),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_BOWSER_PIECE_14,                lll_geo_000DB0),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_MOVING_OCTAGONAL_MESH_PLATFORM, lll_geo_000B08),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_SINKING_ROCK_BLOCK,             lll_geo_000DD0),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_ROLLING_LOG,                    lll_geo_000DE8),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_ROTATING_HEXAGONAL_PLATFORM,    lll_geo_000A78),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_WOOD_BRIDGE,                    lll_geo_000B50),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_LARGE_WOOD_BRIDGE,              lll_geo_000B68),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_FALLING_PLATFORM,               lll_geo_000B80),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_LARGE_FALLING_PLATFORM,         lll_geo_000B98),
    LOAD_MODEL_FROM_GEO(MODEL_LLL_VOLCANO_FALLING_TRAP,           lll_geo_000EA8),
""",
    'ddd':"""LOAD_MODEL_FROM_GEO(MODEL_DDD_BOWSER_SUB_DOOR, ddd_geo_000478),
    LOAD_MODEL_FROM_GEO(MODEL_DDD_BOWSER_SUB,      ddd_geo_0004A0),
    LOAD_MODEL_FROM_GEO(MODEL_DDD_POLE,            ddd_geo_000450),
""",
    'wf':"""LOAD_MODEL_FROM_GEO(MODEL_WF_BUBBLY_TREE,                   bubbly_tree_geo),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,                wf_geo_0007E0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04,                wf_geo_000820),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_05,                wf_geo_000860),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_06,                wf_geo_000878),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_07,                wf_geo_000890),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_08,                wf_geo_0008A8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_09,                wf_geo_0008E8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0A,                wf_geo_000900),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0C,                wf_geo_000940),
    LOAD_MODEL_FROM_GEO(MODEL_WF_GIANT_POLE,                    wf_geo_000AE0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0E,                wf_geo_000958),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0F,                wf_geo_0009A0),
    LOAD_MODEL_FROM_GEO(MODEL_WF_ROTATING_PLATFORM,             wf_geo_0009B8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_11,                wf_geo_0009D0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_12,                wf_geo_0009E8),
    LOAD_MODEL_FROM_GEO(MODEL_WF_SMALL_BOMP,                    wf_geo_000A00),
    LOAD_MODEL_FROM_GEO(MODEL_WF_LARGE_BOMP,                    wf_geo_000A40),
    LOAD_MODEL_FROM_GEO(MODEL_WF_ROTATING_WOODEN_PLATFORM,      wf_geo_000A58),
    LOAD_MODEL_FROM_GEO(MODEL_WF_SLIDING_PLATFORM,              wf_geo_000A98),
    LOAD_MODEL_FROM_GEO(MODEL_WF_TUMBLING_BRIDGE_PART,          wf_geo_000AB0),
    LOAD_MODEL_FROM_GEO(MODEL_WF_TUMBLING_BRIDGE,               wf_geo_000AC8),
    LOAD_MODEL_FROM_GEO(MODEL_WF_TOWER_TRAPEZOID_PLATORM,       wf_geo_000AF8),
    LOAD_MODEL_FROM_GEO(MODEL_WF_TOWER_SQUARE_PLATORM,          wf_geo_000B10),
    LOAD_MODEL_FROM_GEO(MODEL_WF_TOWER_SQUARE_PLATORM_UNUSED,   wf_geo_000B38),
    LOAD_MODEL_FROM_GEO(MODEL_WF_TOWER_SQUARE_PLATORM_ELEVATOR, wf_geo_000B60),
    LOAD_MODEL_FROM_GEO(MODEL_WF_BREAKABLE_WALL_RIGHT,          wf_geo_000B78),
    LOAD_MODEL_FROM_GEO(MODEL_WF_BREAKABLE_WALL_LEFT,           wf_geo_000B90),
    LOAD_MODEL_FROM_GEO(MODEL_WF_KICKABLE_BOARD,                wf_geo_000BA8),
    LOAD_MODEL_FROM_GEO(MODEL_WF_TOWER_DOOR,                    wf_geo_000BE0),
    LOAD_MODEL_FROM_GEO(MODEL_WF_KICKABLE_BOARD_FELLED,         wf_geo_000BC8),
""",
    'castle_courtyard':"""LOAD_MODEL_FROM_GEO(MODEL_COURTYARD_SPIKY_TREE,  spiky_tree_geo),
    LOAD_MODEL_FROM_GEO(MODEL_COURTYARD_WOODEN_DOOR, wooden_door_geo),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,     castle_courtyard_geo_000200),
""",
    'bowser_2':"""LOAD_MODEL_FROM_GEO(MODEL_BOWSER_2_TILTING_ARENA, bowser_2_geo_000170),
""",
    'bowser_3':"""LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_1,  bowser_3_geo_000290),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_2,  bowser_3_geo_0002A8),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_3,  bowser_3_geo_0002C0),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_4,  bowser_3_geo_0002D8),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_5,  bowser_3_geo_0002F0),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_6,  bowser_3_geo_000308),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_7,  bowser_3_geo_000320),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_8,  bowser_3_geo_000338),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_9,  bowser_3_geo_000350),
    LOAD_MODEL_FROM_GEO(MODEL_BOWSER_3_FALLING_PLATFORM_10, bowser_3_geo_000368),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,            bowser_3_geo_000380),
""",
    'ttm':"""LOAD_MODEL_FROM_GEO(MODEL_TTM_SLIDE_EXIT_PODIUM, ttm_geo_000DF4),
    LOAD_MODEL_FROM_GEO(MODEL_TTM_ROLLING_LOG,       ttm_geo_000730),
    LOAD_MODEL_FROM_GEO(MODEL_TTM_STAR_CAGE,        ttm_geo_000710),
    LOAD_MODEL_FROM_GEO(MODEL_TTM_BLUE_SMILEY,       ttm_geo_000D14),
    LOAD_MODEL_FROM_GEO(MODEL_TTM_YELLOW_SMILEY,     ttm_geo_000D4C),
    LOAD_MODEL_FROM_GEO(MODEL_TTM_STAR_SMILEY,       ttm_geo_000D84),
    LOAD_MODEL_FROM_GEO(MODEL_TTM_MOON_SMILEY,       ttm_geo_000DBC),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,     ttm_geo_000748),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_04,     ttm_geo_000778),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_05,     ttm_geo_0007A8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_06,     ttm_geo_0007D8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_07,     ttm_geo_000808),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_08,     ttm_geo_000830),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_09,     ttm_geo_000858),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0A,     ttm_geo_000880),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0B,     ttm_geo_0008A8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0C,     ttm_geo_0008D0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0D,     ttm_geo_0008F8),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_0F,     ttm_geo_000920),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_10,     ttm_geo_000948),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_11,     ttm_geo_000970),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_12,     ttm_geo_000990),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_13,     ttm_geo_0009C0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_14,     ttm_geo_0009F0),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_15,     ttm_geo_000A18),
    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_16,     ttm_geo_000A40),
""",
	'totwc':"""LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03, totwc_geo_000160),
"""
}

scriptHeader='''#include <ultra64.h>
#include "sm64.h"
#include "behavior_data.h"
#include "model_ids.h"
#include "seq_ids.h"
#include "dialog_ids.h"
#include "segment_symbols.h"
#include "level_commands.h"
#include "game/level_update.h"
#include "levels/scripts.h"
#include "actors/common1.h"
#include "make_const_nonconst.h"

'''

geocHeader='''#include <ultra64.h>
#include "sm64.h"
#include "geo_commands.h"
#include "game/level_geo.h"
#include "game/geo_misc.h"
#include "game/camera.h"
#include "game/moving_texture.h"
#include "game/screen_transition.h"
#include "game/paintings.h"
#include "make_const_nonconst.h"

'''

ldHeader='''#include <ultra64.h>
#include "sm64.h"
#include "surface_terrains.h"
#include "moving_texture_macros.h"
#include "level_misc_macros.h"
#include "macro_preset_names.h"
#include "special_preset_names.h"
#include "textures.h"
#include "dialog_ids.h"

#include "make_const_nonconst.h"

'''

TextMap = {
	80:'^',
	81:'|',
	82:'<',
	83:'>',
	0x9e:' ',
	0x9f:'-',
	111:',',
	84:'[A]',
	85:'[B]',
	86:'[C]',
	87:'[Z]',
	88:'[R]',
	208:'/',
	62:"'",
	63:'.',
	224:'[%]',
	225:'(',
	226:')(',
	227:')',
	228:'+',
	228:'↔',
	229:'&',
	230:':',
	240:'゛',
	241:'゜',
	242:'!',
	243:'%',
	244:'?',
	245:'『',
	246:'』',
	247:'~',
	248:'…',
	249:'$',
	250:'★',
	251:'×',
	252:'・',
	253:'☆',
	254:'\\n\\\n',
	209:'the',
	210:'you'
}

Course_Names= {
	0:"COURSE_BOB",
	1:"COURSE_WF",
	2:"COURSE_JRB",
	3:"COURSE_CCM",
	4:"COURSE_BBH",
	5:"COURSE_HMC",
	6:"COURSE_LLL",
	7:"COURSE_SSL",
	8:"COURSE_DDD",
	9:"COURSE_SL",
	10:"COURSE_WDW",
	11:"COURSE_TTM",
	12:"COURSE_THI",
	13:"COURSE_TTC",
	14:"COURSE_RR",
	15:"COURSE_BITDW",
	16:"COURSE_BITFS",
	17:"COURSE_BITS",
	18:"COURSE_PSS",
	19:"COURSE_COTMC",
	20:"COURSE_TOTWC",
	21:"COURSE_VCUTM",
	22:"COURSE_WMOTR",
	23:"COURSE_SA",
	24:"COURSE_CAKE_END"
}

UPA = (lambda x,y,z,w: struct.unpack("%s"%z,x[y:y+w]))
def UPF(rom,pointer):
	return struct.unpack(">3f",rom[pointer:pointer+12])

#The locations of the star positions. For koopa its args to UPA, else its 0, RM pos, Editor pos
#None means its not supported in editor/rom manager
StarPositions = {
	'KoopaBoB':(('>h',0xEd868,2),('>h',0xEd86A,2),('>h',0xEd86C,2),'{','}'),
	'KoopaTHI':(('>h',0xEd878,2),('>h',0xEd87A,2),('>h',0xEd87C,2),'{','}'),
	'KingBobOmb':(0,0x1204f00,0x1204f00),
	'KingWhomp':(0,0x1204f10,0x1204f10),
	'Eyerock':(0,0x1204f20,0x1204f20),
	'BigBully':(0,0x1204f30,0x1204f30),
	'ChillBully':(0,0x1204f40,0x1204f40),
	'BigPiranhas':(0,0x1204f50,0x1204f50),
	'TuxieMother':(0,0x1204f60,0x1204f60),
	'Wiggler':(0,0x1204f70,0x1204f70),
	'PssSlide':(0,0x1204f80,0x1204f80),
	'RacingPenguin':(0,0x1204f90,0x1204f90),
	'TreasureChest':(0,0x1204fA0,0x1204fA0),
	'GhostHuntBoo':(0,0x1204fAC,0x1204fAC),
	'Klepto':(0,0x1204fC4,0x1204fC4),
	'MerryGoRound':(0,0x1204fB8,0x1204fB8),
	'MrI':(0,0x1204fD0,0x1204fD0),
	'BalconyBoo':(0,0x1204fDC,0x1204fD8),
	'BigBullyTrio':(0,0x1204fE4,0x1204fE4),
}

DefaultPos={
	'KingBobOmb':'#define KingBobOmbStarPos 2000.0f, 4500.0f, -4500.0f\n',
	'KingWhomp':'#define KingWhompStarPos 180.0f, 3880.0f, 340.0f\n',
	'Eyerock':'#define EyerockStarPos 0.0f, -900.0f, -3700.0f\n',
	'BigBully':'#define BigBullyStarPos 0, 950.0f, -6800.0f\n',
	'ChillBully':'#define ChillBullyStarPos 130.0f, 1600.0f, -4335.0f\n',
	'BigPiranhas':'#define BigPiranhasStarPos -6300.0f, -1850.0f, -6300.0f\n',
	'TuxieMother':'#define TuxieMotherStarPos 3167.0f, -4300.0f, 5108.0f\n',
	'Wiggler':'#define WigglerStarPos 0.0f, 2048.0f, 0.0f\n',
	'PssSlide':'#define PssSlideStarPos -6358.0f, -4300.0f, 4700.0f\n',
	'RacingPenguin':'#define RacingPenguinStarPos -7339.0f, -5700.0f, -6774.0f\n',
	'TreasureChest':'#define TreasureChestStarPos -1800.0f, -2500.0f, -1700.0f\n',
	'GhostHuntBoo':'#define GhostHuntBooStarPos 980.0f, 1100.0f, 250.0f\n',
	'Klepto':'#define KleptoStarPos -5550.0f, 300.0f, -930.0f\n',
	'MerryGoRound':'#define MerryGoRoundStarPos -1600.0f, -2100.0f, 205.0f\n',
	'MrI':'#define MrIStarPos 1370, 2000.0f, -320.0f\n',
	'BalconyBoo':'#define BalconyBooStarPos 700.0f, 3200.0f, 1900.0f\n',
	'BigBullyTrio':'#define BigBullyTrioStarPos 3700.0f, 600.0f, -5500.0f\n'
}

#Cols that aren't loaded via behaviors. This is ruined by editor ofc
TrackHardCodedCols={
'rr_seg7_collision_07029038':0xED9CC,
'ccm_seg7_collision_070163F8':0xED9D0,
'checkerboard_platform_seg8_collision_0800D710':0xED9D4,
'bitfs_seg7_collision_070157E0':0xED9D8,
}

#**Trajectory. So this is the location of the pointer to the trajectory in the rom
Trajectories = {
	'KoopaBoB':0xEd864,
	'KoopaTHI':0xEd874,
	'rr_seg7_trajectory_0702EC3C_RM2C':0xED9DC,
	'rr_seg7_trajectory_0702ECC0_RM2C':0xED9E0,
	'ccm_seg7_trajectory_0701669C_RM2C':0xED9E4,
	'bitfs_seg7_trajectory_070159AC_RM2C':0xED9E8,
	'hmc_seg7_trajectory_0702B86C_RM2C':0xED9EC,
	'lll_seg7_trajectory_0702856C_RM2C':0xED9F0,
	'lll_seg7_trajectory_07028660_RM2C':0xED9F4,
	'rr_seg7_trajectory_0702ED9C_RM2C':0xED9F8,
	'rr_seg7_trajectory_0702EEE0_RM2C':0xED9FC,
	'ccm_seg7_trajectory_penguin_race_RM2C':0xCCA6C #this one is loaded via asm
}

DefaultTraj = {
	'KoopaBoB':"""const Trajectory KoopaBoB_path[] = {
    TRAJECTORY_POS(0, /*pos*/ -2220,   204,  5520),
    TRAJECTORY_POS(1, /*pos*/ -2020,   204,  5820),
    TRAJECTORY_POS(2, /*pos*/   760,   765,  5680),
    TRAJECTORY_POS(3, /*pos*/  1920,   768,  5040),
    TRAJECTORY_POS(4, /*pos*/  2000,   768,  4360),
    TRAJECTORY_POS(5, /*pos*/  1240,   768,  3600),
    TRAJECTORY_POS(6, /*pos*/  -280,   768,  2720),
    TRAJECTORY_POS(7, /*pos*/ -1680,   768,  1840),
    TRAJECTORY_POS(8, /*pos*/ -2280,     0,  1800),
    TRAJECTORY_POS(9, /*pos*/ -2720,     0,  1120),
    TRAJECTORY_POS(10, /*pos*/ -2520,     0,   480),
    TRAJECTORY_POS(11, /*pos*/ -1720,     0,   120),
    TRAJECTORY_POS(12, /*pos*/   560,   630,  -840),
    TRAJECTORY_POS(13, /*pos*/  2700,  1571, -1500),
    TRAJECTORY_POS(14, /*pos*/  4520,  1830, -2600),
    TRAJECTORY_POS(15, /*pos*/  6240,  1943, -3500),
    TRAJECTORY_POS(16, /*pos*/  6380,  2066, -6180),
    TRAJECTORY_POS(17, /*pos*/  4000,  2390, -7720),
    TRAJECTORY_POS(18, /*pos*/  -120,  2608, -5515),
    TRAJECTORY_POS(19, /*pos*/  -180,  2641, -4860),
    TRAJECTORY_POS(20, /*pos*/   580,  2769, -3380),
    TRAJECTORY_POS(21, /*pos*/  1670,  2867, -2580),
    TRAJECTORY_POS(22, /*pos*/  2216,  2900, -2126),
    TRAJECTORY_POS(23, /*pos*/  3167,  2965, -1870),
    TRAJECTORY_POS(24, /*pos*/  4069,  3050, -2487),
    TRAJECTORY_POS(25, /*pos*/  4880,  3037, -3416),
    TRAJECTORY_POS(26, /*pos*/  5020,  3181, -5760),
    TRAJECTORY_POS(27, /*pos*/  4660,  3354, -6300),
    TRAJECTORY_POS(28, /*pos*/  3940,  3514, -6800),
    TRAJECTORY_POS(29, /*pos*/  3200,  3619, -6850),
    TRAJECTORY_POS(30, /*pos*/  1290,  3768, -5793),
    TRAJECTORY_POS(31, /*pos*/  1150,  3900, -3670),
    TRAJECTORY_POS(32, /*pos*/  2980,  4046, -2930),
    TRAJECTORY_POS(33, /*pos*/  4334,  4186, -3680),
    TRAJECTORY_POS(34, /*pos*/  4180,  4242, -4220),
    TRAJECTORY_POS(35, /*pos*/  3660,  4242, -4380),
    TRAJECTORY_END(),
};
""",
	'KoopaTHI':"""const Trajectory KoopaTHI_path[] = {
    TRAJECTORY_POS(0, /*pos*/ -1900,  -511,  2400),
    TRAJECTORY_POS(1, /*pos*/ -2750,  -511,  3300),
    TRAJECTORY_POS(2, /*pos*/ -4900,  -511,  1200),
    TRAJECTORY_POS(3, /*pos*/ -4894,   100, -2146),
    TRAJECTORY_POS(4, /*pos*/ -5200,   143, -5050),
    TRAJECTORY_POS(5, /*pos*/ -2800,  -962, -4900),
    TRAJECTORY_POS(6, /*pos*/   500, -1637, -4900),
    TRAJECTORY_POS(7, /*pos*/  1500, -2047, -5200),
    TRAJECTORY_POS(8, /*pos*/  2971, -2046, -5428),
    TRAJECTORY_POS(9, /*pos*/  5642, -1535, -5442),
    TRAJECTORY_POS(10, /*pos*/  6371, -1535, -6271),
    TRAJECTORY_POS(11, /*pos*/  6814, -1535, -6328),
    TRAJECTORY_END(),
};
""",
	'rr_seg7_trajectory_0702EC3C_RM2C':'''const Trajectory rr_seg7_trajectory_0702EC3C_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/  4500, -1820,  2050),
    TRAJECTORY_POS(1, /*pos*/  5250, -1840,  2050),
    TRAJECTORY_POS(2, /*pos*/  5860, -1430,  2070),
    TRAJECTORY_POS(3, /*pos*/  6260, -1430,  2070),
    TRAJECTORY_POS(4, /*pos*/  6970, -1220,  2000),
    TRAJECTORY_POS(5, /*pos*/  7300, -1160,  1745),
    TRAJECTORY_POS(6, /*pos*/  7490, -1125,  1450),
    TRAJECTORY_POS(7, /*pos*/  7560, -1065,  1040),
    TRAJECTORY_POS(8, /*pos*/  7510, -1020,   630),
    TRAJECTORY_POS(9, /*pos*/  7265,  -935,   310),
    TRAJECTORY_POS(10, /*pos*/  6960,  -915,    90),
    TRAJECTORY_POS(11, /*pos*/  6085,  -915,   -40),
    TRAJECTORY_POS(12, /*pos*/  5420,  -915,   -40),
    TRAJECTORY_POS(13, /*pos*/  4960,  -915,   -40),
    TRAJECTORY_POS(14, /*pos*/  4310,  -915,   -40),
    TRAJECTORY_POS(15, /*pos*/  4035,  -915,   -40),
    TRAJECTORY_END(),
};
''',
	'rr_seg7_trajectory_0702ECC0_RM2C':'''const Trajectory rr_seg7_trajectory_0702ECC0_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/  1220, -1080, -3650),
    TRAJECTORY_POS(1, /*pos*/  1740, -1120, -3640),
    TRAJECTORY_POS(2, /*pos*/  2220,  -840, -3640),
    TRAJECTORY_POS(3, /*pos*/  2480,  -300, -3640),
    TRAJECTORY_POS(4, /*pos*/  2780,   -80, -3640),
    TRAJECTORY_POS(5, /*pos*/  3360,  -100, -3640),
    TRAJECTORY_POS(6, /*pos*/  3820,  -500, -3640),
    TRAJECTORY_POS(7, /*pos*/  4120,  -500, -3640),
    TRAJECTORY_POS(8, /*pos*/  4520,   -80, -3640),
    TRAJECTORY_POS(9, /*pos*/  4900,    40, -3640),
    TRAJECTORY_POS(10, /*pos*/  5300,   100, -3580),
    TRAJECTORY_POS(11, /*pos*/  5520,   260, -3360),
    TRAJECTORY_POS(12, /*pos*/  5640,   380, -3040),
    TRAJECTORY_POS(13, /*pos*/  5700,   470, -2660),
    TRAJECTORY_POS(14, /*pos*/  5680,   520, -2220),
    TRAJECTORY_POS(15, /*pos*/  5440,   570, -1920),
    TRAJECTORY_POS(16, /*pos*/  5120,   640, -1680),
    TRAJECTORY_POS(17, /*pos*/  4520,   720, -1620),
    TRAJECTORY_POS(18, /*pos*/  3900,   720, -1620),
    TRAJECTORY_POS(19, /*pos*/  3280,   920, -1620),
    TRAJECTORY_POS(20, /*pos*/  2460,   920, -1620),
    TRAJECTORY_POS(21, /*pos*/  2000,   920, -1660),
    TRAJECTORY_POS(22, /*pos*/  1660,   920, -1620),
    TRAJECTORY_POS(23, /*pos*/  1340,   920, -1460),
    TRAJECTORY_POS(24, /*pos*/  1060,   920, -1100),
    TRAJECTORY_POS(25, /*pos*/  1020,   920,  -580),
    TRAJECTORY_POS(26, /*pos*/  1100,   920,    20),
    TRAJECTORY_END(),
};
''',
	'ccm_seg7_trajectory_0701669C_RM2C':'''const Trajectory ccm_seg7_trajectory_0701669C_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/  2501,  2662,  -975),
    TRAJECTORY_POS(1, /*pos*/  2533,  2560,  -800),
    TRAJECTORY_POS(2, /*pos*/  2566,  2300,  -500),
    TRAJECTORY_POS(3, /*pos*/  2600,  1884,   733),
    TRAJECTORY_POS(4, /*pos*/  2466,  1647,  1835),
    TRAJECTORY_POS(5, /*pos*/  2000,  1483,  2233),
    TRAJECTORY_POS(6, /*pos*/   766,  1321,  2400),
    TRAJECTORY_POS(7, /*pos*/  -872,  1190,  2033),
    TRAJECTORY_POS(8, /*pos*/ -3072,  1097,  1300),
    TRAJECTORY_POS(9, /*pos*/ -3805,   882,  -366),
    TRAJECTORY_POS(10, /*pos*/ -3758,   819, -1513),
    TRAJECTORY_POS(11, /*pos*/ -3145,   786, -2426),
    TRAJECTORY_POS(12, /*pos*/ -1658,   546, -2853),
    TRAJECTORY_POS(13, /*pos*/  -138,   300, -3000),
    TRAJECTORY_POS(14, /*pos*/  1966,  -192, -2800),
    TRAJECTORY_POS(15, /*pos*/  3066,  -456, -2800),
    TRAJECTORY_POS(16, /*pos*/  3933,  -461, -2999),
    TRAJECTORY_POS(17, /*pos*/  4266,  -188, -3433),
    TRAJECTORY_POS(18, /*pos*/  3901,  -402, -3800),
    TRAJECTORY_POS(19, /*pos*/  3133,  -579, -3866),
    TRAJECTORY_POS(20, /*pos*/  2033,  -855, -3800),
    TRAJECTORY_POS(21, /*pos*/   766, -1073, -3633),
    TRAJECTORY_POS(22, /*pos*/ -1100, -1142, -3744),
    TRAJECTORY_POS(23, /*pos*/ -2318, -1188, -3658),
    TRAJECTORY_POS(24, /*pos*/ -3318, -1228, -3375),
    TRAJECTORY_POS(25, /*pos*/ -4010, -1267, -2802),
    TRAJECTORY_POS(26, /*pos*/ -4470, -1368, -2151),
    TRAJECTORY_POS(27, /*pos*/ -4679, -1358, -1321),
    TRAJECTORY_POS(28, /*pos*/ -4770, -1333,  -648),
    TRAJECTORY_POS(29, /*pos*/ -4847, -1351,    40),
    TRAJECTORY_END(),
};
''',
	'bitfs_seg7_trajectory_070159AC_RM2C':'''const Trajectory bitfs_seg7_trajectory_070159AC_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/ -5744, -3072,     0),
    TRAJECTORY_POS(1, /*pos*/ -5444, -3072,     0),
    TRAJECTORY_POS(2, /*pos*/ -5144, -3072,     0),
    TRAJECTORY_POS(3, /*pos*/ -4954, -3122,     0),
    TRAJECTORY_POS(4, /*pos*/ -4754, -3172,     0),
    TRAJECTORY_POS(5, /*pos*/ -4300, -3172,     0),
    TRAJECTORY_POS(6, /*pos*/ -3850, -3172,     0),
    TRAJECTORY_POS(7, /*pos*/ -3650, -3122,     0),
    TRAJECTORY_POS(8, /*pos*/ -3460, -3072,     0),
    TRAJECTORY_POS(9, /*pos*/ -3160, -3072,     0),
    TRAJECTORY_POS(10, /*pos*/ -3000, -3150,     0),
    TRAJECTORY_POS(11, /*pos*/ -2800, -3300,     0),
    TRAJECTORY_POS(12, /*pos*/ -2600, -3450,     0),
    TRAJECTORY_POS(13, /*pos*/ -2400, -3500,     0),
    TRAJECTORY_POS(14, /*pos*/ -2200, -3450,     0),
    TRAJECTORY_POS(15, /*pos*/ -2000, -3300,     0),
    TRAJECTORY_POS(16, /*pos*/ -1800, -3150,     0),
    TRAJECTORY_POS(17, /*pos*/ -1600, -3072,     0),
    TRAJECTORY_POS(18, /*pos*/ -1300, -3072,     0),
    TRAJECTORY_POS(19, /*pos*/ -1000, -3072,     0),
    TRAJECTORY_POS(20, /*pos*/  -608, -3072,     0),
    TRAJECTORY_POS(21, /*pos*/ -1000, -3072,     0),
    TRAJECTORY_POS(22, /*pos*/ -1300, -3072,     0),
    TRAJECTORY_POS(23, /*pos*/ -1600, -3072,     0),
    TRAJECTORY_POS(24, /*pos*/ -1800, -3150,     0),
    TRAJECTORY_POS(25, /*pos*/ -2000, -3300,     0),
    TRAJECTORY_POS(26, /*pos*/ -2200, -3450,     0),
    TRAJECTORY_POS(27, /*pos*/ -2400, -3500,     0),
    TRAJECTORY_POS(28, /*pos*/ -2600, -3450,     0),
    TRAJECTORY_POS(29, /*pos*/ -2800, -3300,     0),
    TRAJECTORY_POS(30, /*pos*/ -3000, -3150,     0),
    TRAJECTORY_POS(31, /*pos*/ -3160, -3072,     0),
    TRAJECTORY_POS(32, /*pos*/ -3460, -3072,     0),
    TRAJECTORY_POS(33, /*pos*/ -3650, -3122,     0),
    TRAJECTORY_POS(34, /*pos*/ -3850, -3172,     0),
    TRAJECTORY_POS(35, /*pos*/ -4300, -3172,     0),
    TRAJECTORY_POS(36, /*pos*/ -4754, -3172,     0),
    TRAJECTORY_POS(37, /*pos*/ -4954, -3122,     0),
    TRAJECTORY_POS(38, /*pos*/ -5144, -3072,     0),
    TRAJECTORY_POS(39, /*pos*/ -5444, -3072,     0),
    TRAJECTORY_END(),
};
''',
	'hmc_seg7_trajectory_0702B86C_RM2C':'''const Trajectory hmc_seg7_trajectory_0702B86C_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/ 1272, 2000, 5120),
    TRAJECTORY_POS(1, /*pos*/ 1272, 2000, 3500),
    TRAJECTORY_POS(2, /*pos*/ 1800, 2100, 3000),
    TRAJECTORY_POS(3, /*pos*/ 4100, 2100, 3000),
    TRAJECTORY_POS(4, /*pos*/ 4640, 2160, 3980),
    TRAJECTORY_POS(5, /*pos*/ 5416, 2100, 3642),
    TRAJECTORY_POS(6, /*pos*/ 6720, 1950, 4440),
    TRAJECTORY_POS(7, /*pos*/ 6700, 1880, 5040),
    TRAJECTORY_POS(8, /*pos*/ 6060, 1880, 5640),
    TRAJECTORY_POS(9, /*pos*/ 5440, 1850, 6200),
    TRAJECTORY_POS(10, /*pos*/ 3820, 1990, 7130),
    TRAJECTORY_POS(11, /*pos*/ 1270, 1990, 7130),
    TRAJECTORY_POS(12, /*pos*/ 1272, 2000, 6000),
    TRAJECTORY_POS(13, /*pos*/ 1272, 2000, 5400),
    TRAJECTORY_END(),
};
''',
	'lll_seg7_trajectory_0702856C_RM2C':'''const Trajectory lll_seg7_trajectory_0702856C_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/  -764,     0,  1664),
    TRAJECTORY_POS(1, /*pos*/   -70,     0,  1410),
    TRAJECTORY_POS(2, /*pos*/   625,   100,  1157),
    TRAJECTORY_POS(3, /*pos*/   725,   120,  1169),
    TRAJECTORY_POS(4, /*pos*/   800,   140,  1219),
    TRAJECTORY_POS(5, /*pos*/   855,   160,  1293),
    TRAJECTORY_POS(6, /*pos*/   865,   180,  1392),
    TRAJECTORY_POS(7, /*pos*/   839,   200,  1488),
    TRAJECTORY_POS(8, /*pos*/   762,   220,  1556),
    TRAJECTORY_POS(9, /*pos*/   673,   240,  1584),
    TRAJECTORY_POS(10, /*pos*/   583,   260,  1590),
    TRAJECTORY_POS(11, /*pos*/   387,   300,  1493),
    TRAJECTORY_POS(12, /*pos*/ -1257,   860,  -264),
    TRAJECTORY_POS(13, /*pos*/ -1327,   870,  -364),
    TRAJECTORY_POS(14, /*pos*/ -1372,   880,  -441),
    TRAJECTORY_POS(15, /*pos*/ -1398,   890,  -516),
    TRAJECTORY_POS(16, /*pos*/ -1387,   900,  -595),
    TRAJECTORY_POS(17, /*pos*/ -1364,   910,  -671),
    TRAJECTORY_POS(18, /*pos*/ -1307,   920,  -748),
    TRAJECTORY_POS(19, /*pos*/ -1233,   930,  -813),
    TRAJECTORY_POS(20, /*pos*/ -1157,   940,  -857),
    TRAJECTORY_POS(21, /*pos*/  -742,   960, -1040),
    TRAJECTORY_POS(22, /*pos*/  -592,   960, -1108),
    TRAJECTORY_POS(23, /*pos*/  -546,   960, -1128),
    TRAJECTORY_POS(24, /*pos*/  -511,   955, -1144),
    TRAJECTORY_POS(25, /*pos*/  -478,   940, -1159),
    TRAJECTORY_POS(26, /*pos*/  -450,   916, -1172),
    TRAJECTORY_POS(27, /*pos*/  -428,   885, -1182),
    TRAJECTORY_POS(28, /*pos*/  -414,   849, -1188),
    TRAJECTORY_POS(29, /*pos*/  -410,   810, -1190),
    TRAJECTORY_END(),
};
''',
	'lll_seg7_trajectory_07028660_RM2C':'''const Trajectory lll_seg7_trajectory_07028660_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/   184,   980, -1366),
    TRAJECTORY_POS(1, /*pos*/   294,   990, -1329),
    TRAJECTORY_POS(2, /*pos*/   386,  1000, -1256),
    TRAJECTORY_POS(3, /*pos*/   465,  1010, -1163),
    TRAJECTORY_POS(4, /*pos*/   510,  1020, -1063),
    TRAJECTORY_POS(5, /*pos*/   536,  1030,  -953),
    TRAJECTORY_POS(6, /*pos*/   523,  1040,  -845),
    TRAJECTORY_POS(7, /*pos*/   486,  1050,  -735),
    TRAJECTORY_POS(8, /*pos*/   435,  1060,  -605),
    TRAJECTORY_POS(9, /*pos*/   399,  1070,  -471),
    TRAJECTORY_POS(10, /*pos*/   379,  1080,  -375),
    TRAJECTORY_POS(11, /*pos*/   369,  1090,  -246),
    TRAJECTORY_POS(12, /*pos*/   389,  1100,   -97),
    TRAJECTORY_POS(13, /*pos*/   434,  1100,    34),
    TRAJECTORY_POS(14, /*pos*/   497,  1100,   144),
    TRAJECTORY_POS(15, /*pos*/   575,  1100,   232),
    TRAJECTORY_POS(16, /*pos*/   696,  1100,   282),
    TRAJECTORY_POS(17, /*pos*/   818,  1100,   285),
    TRAJECTORY_POS(18, /*pos*/   939,  1100,   241),
    TRAJECTORY_POS(19, /*pos*/  1039,  1100,   150),
    TRAJECTORY_POS(20, /*pos*/  1092,  1100,    33),
    TRAJECTORY_POS(21, /*pos*/  1105,  1100,  -128),
    TRAJECTORY_POS(22, /*pos*/  1090,  1100,  -292),
    TRAJECTORY_POS(23, /*pos*/  1087,  1095,  -330),
    TRAJECTORY_POS(24, /*pos*/  1083,  1080,  -366),
    TRAJECTORY_POS(25, /*pos*/  1080,  1056,  -397),
    TRAJECTORY_POS(26, /*pos*/  1078,  1025,  -421),
    TRAJECTORY_POS(27, /*pos*/  1077,   989,  -436),
    TRAJECTORY_POS(28, /*pos*/  1076,   950,  -441),
    TRAJECTORY_END(),
};
''',
	'rr_seg7_trajectory_0702ED9C_RM2C':'''const Trajectory rr_seg7_trajectory_0702ED9C_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/  1580,   980,  -180),
    TRAJECTORY_POS(1, /*pos*/  2740,  1140,  -140),
    TRAJECTORY_POS(2, /*pos*/  3440,  1340,   260),
    TRAJECTORY_POS(3, /*pos*/  3740,  1400,   460),
    TRAJECTORY_POS(4, /*pos*/  3960,  1440,   800),
    TRAJECTORY_POS(5, /*pos*/  4200,  1490,  1100),
    TRAJECTORY_POS(6, /*pos*/  4520,  1540,  1340),
    TRAJECTORY_POS(7, /*pos*/  4920,  1600,  1420),
    TRAJECTORY_POS(8, /*pos*/  5360,  1645,  1340),
    TRAJECTORY_POS(9, /*pos*/  5660,  1700,  1120),
    TRAJECTORY_POS(10, /*pos*/  5900,  1740,   780),
    TRAJECTORY_POS(11, /*pos*/  5960,  1740,   380),
    TRAJECTORY_POS(12, /*pos*/  5900,  1740,   -20),
    TRAJECTORY_POS(13, /*pos*/  5640,  1740,  -360),
    TRAJECTORY_POS(14, /*pos*/  5340,  1740,  -580),
    TRAJECTORY_POS(15, /*pos*/  4920,  1740,  -620),
    TRAJECTORY_POS(16, /*pos*/  4520,  1750,  -580),
    TRAJECTORY_POS(17, /*pos*/  4240,  1760,  -340),
    TRAJECTORY_POS(18, /*pos*/  4080,  1785,   -40),
    TRAJECTORY_POS(19, /*pos*/  4060,  1820,   320),
    TRAJECTORY_POS(20, /*pos*/  4140,  1855,   680),
    TRAJECTORY_POS(21, /*pos*/  4320,  1900,   940),
    TRAJECTORY_POS(22, /*pos*/  4620,  1940,  1140),
    TRAJECTORY_POS(23, /*pos*/  4920,  2010,  1190),
    TRAJECTORY_POS(24, /*pos*/  5240,  2050,  1140),
    TRAJECTORY_POS(25, /*pos*/  5500,  2100,   960),
    TRAJECTORY_POS(26, /*pos*/  5680,  2150,   700),
    TRAJECTORY_POS(27, /*pos*/  5740,  2160,   400),
    TRAJECTORY_POS(28, /*pos*/  5680,  2160,    60),
    TRAJECTORY_POS(29, /*pos*/  5500,  2160,  -200),
    TRAJECTORY_POS(30, /*pos*/  5260,  2160,  -380),
    TRAJECTORY_POS(31, /*pos*/  4940,  2160,  -420),
    TRAJECTORY_POS(32, /*pos*/  4620,  2160,  -360),
    TRAJECTORY_POS(33, /*pos*/  4400,  2200,  -200),
    TRAJECTORY_POS(34, /*pos*/  4240,  2240,    20),
    TRAJECTORY_POS(35, /*pos*/  3900,  2260,   140),
    TRAJECTORY_POS(36, /*pos*/  3740,  2260,   140),
    TRAJECTORY_POS(37, /*pos*/  2700,  2260,   140),
    TRAJECTORY_POS(38, /*pos*/  2200,  2460,   140),
    TRAJECTORY_POS(39, /*pos*/  1580,  2460,   140),
    TRAJECTORY_END(),
};
''',
	'rr_seg7_trajectory_0702EEE0_RM2C':'''const Trajectory rr_seg7_trajectory_0702EEE0_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/   540,   925,  -160),
    TRAJECTORY_POS(1, /*pos*/  -425,  1020,  -160),
    TRAJECTORY_POS(2, /*pos*/ -1160,  1620,  -160),
    TRAJECTORY_POS(3, /*pos*/ -1940,  2960,  -160),
    TRAJECTORY_POS(4, /*pos*/ -2550,  3320,  -170),
    TRAJECTORY_POS(5, /*pos*/ -3060,  3500,   -80),
    TRAJECTORY_POS(6, /*pos*/ -3500,  3500,  -620),
    TRAJECTORY_POS(7, /*pos*/ -3500,  3500, -1100),
    TRAJECTORY_POS(8, /*pos*/ -3380,  3500, -1600),
    TRAJECTORY_POS(9, /*pos*/ -3040,  3500, -1960),
    TRAJECTORY_POS(10, /*pos*/ -2620,  3500, -2200),
    TRAJECTORY_POS(11, /*pos*/ -2100,  3500, -3100),
    TRAJECTORY_POS(12, /*pos*/ -1660,  3500, -4160),
    TRAJECTORY_POS(13, /*pos*/ -1660,  3500, -4940),
    TRAJECTORY_POS(14, /*pos*/ -1880,  3500, -5280),
    TRAJECTORY_POS(15, /*pos*/ -2220,  3500, -5500),
    TRAJECTORY_POS(16, /*pos*/ -3060,  3380, -5560),
    TRAJECTORY_POS(17, /*pos*/ -3920,  3260, -5480),
    TRAJECTORY_POS(18, /*pos*/ -4180,  3260, -5260),
    TRAJECTORY_POS(19, /*pos*/ -4300,  3260, -4940),
    TRAJECTORY_POS(20, /*pos*/ -4300,  3440, -3780),
    TRAJECTORY_POS(21, /*pos*/ -4240,  3560, -2440),
    TRAJECTORY_POS(22, /*pos*/ -4400,  3560, -2120),
    TRAJECTORY_POS(23, /*pos*/ -4740,  3560, -1860),
    TRAJECTORY_POS(24, /*pos*/ -5320,  3600, -1800),
    TRAJECTORY_POS(25, /*pos*/ -6000,  3680, -1860),
    TRAJECTORY_POS(26, /*pos*/ -7720,  3980, -3250),
    TRAJECTORY_POS(27, /*pos*/ -7810,  4140, -3990),
    TRAJECTORY_POS(28, /*pos*/ -7670,  4320, -4645),
    TRAJECTORY_POS(29, /*pos*/ -7090,  4620, -5170),
    TRAJECTORY_POS(30, /*pos*/ -6040,  4620, -5280),
    TRAJECTORY_POS(31, /*pos*/ -5360,  4620, -5220),
    TRAJECTORY_POS(32, /*pos*/ -4980,  4100, -5140),
    TRAJECTORY_POS(33, /*pos*/ -4780,  3360, -5140),
    TRAJECTORY_POS(34, /*pos*/ -4480,  3180, -5140),
    TRAJECTORY_POS(35, /*pos*/ -3960,  3180, -5140),
    TRAJECTORY_POS(36, /*pos*/ -3580,  3580, -5140),
    TRAJECTORY_POS(37, /*pos*/ -3660,  4300, -5140),
    TRAJECTORY_POS(38, /*pos*/ -3800,  4800, -5140),
    TRAJECTORY_POS(39, /*pos*/ -4200,  5220, -5120),
    TRAJECTORY_POS(40, /*pos*/ -4200,  6560, -5100),
    TRAJECTORY_POS(41, /*pos*/ -4200,  6740, -5100),
    TRAJECTORY_END(),
};
''',
	'ccm_seg7_trajectory_penguin_race_RM2C':'''const Trajectory ccm_seg7_trajectory_penguin_race_RM2C_path[] = {
    TRAJECTORY_POS(0, /*pos*/ -4762,  6660, -6143),
    TRAJECTORY_POS(1, /*pos*/ -4133,  6455, -6100),
    TRAJECTORY_POS(2, /*pos*/ -2000,  6100, -5944),
    TRAJECTORY_POS(3, /*pos*/ -1200,  6033, -5833),
    TRAJECTORY_POS(4, /*pos*/  1022,  5611, -6033),
    TRAJECTORY_POS(5, /*pos*/  3833,  5033, -6233),
    TRAJECTORY_POS(6, /*pos*/  6055,  4598, -5766),
    TRAJECTORY_POS(7, /*pos*/  6677,  4462, -4877),
    TRAJECTORY_POS(8, /*pos*/  6277,  4417, -3344),
    TRAJECTORY_POS(9, /*pos*/  4788,  4280, -1844),
    TRAJECTORY_POS(10, /*pos*/  2211,  4086,  -555),
    TRAJECTORY_POS(11, /*pos*/   522,  3687,  -222),
    TRAJECTORY_POS(12, /*pos*/  -724,  3443,  -466),
    TRAJECTORY_POS(13, /*pos*/ -1350,  3302, -1288),
    TRAJECTORY_POS(14, /*pos*/ -1255,  3039, -3000),
    TRAJECTORY_POS(15, /*pos*/ -2233,  2785, -4533),
    TRAJECTORY_POS(16, /*pos*/ -3288,  2622, -4820),
    TRAJECTORY_POS(17, /*pos*/ -4266,  2480, -4555),
    TRAJECTORY_POS(18, /*pos*/ -4900,  2333, -3944),
    TRAJECTORY_POS(19, /*pos*/ -5066,  2175, -2977),
    TRAJECTORY_POS(20, /*pos*/ -4833,  2018, -1999),
    TRAJECTORY_POS(21, /*pos*/ -4122,  1866, -1366),
    TRAJECTORY_POS(22, /*pos*/ -3200,  1736, -1088),
    TRAJECTORY_POS(23, /*pos*/  -222,  1027, -1200),
    TRAJECTORY_POS(24, /*pos*/  1333,   761, -1733),
    TRAJECTORY_POS(25, /*pos*/  2488,   562, -2944),
    TRAJECTORY_POS(26, /*pos*/  2977,   361, -4988),
    TRAJECTORY_POS(28, /*pos*/  3754,   329, -5689),
    TRAJECTORY_POS(29, /*pos*/  5805,    86, -5980),
    TRAJECTORY_POS(30, /*pos*/  6566,  -449, -4133),
    TRAJECTORY_POS(31, /*pos*/  6689, -1119,  -888),
    TRAJECTORY_POS(32, /*pos*/  6688, -2127,  1200),
    TRAJECTORY_POS(33, /*pos*/  6666, -2573,  3555),
    TRAJECTORY_POS(34, /*pos*/  6600, -2667,  4333),
    TRAJECTORY_POS(35, /*pos*/  6366, -2832,  5722),
    TRAJECTORY_POS(36, /*pos*/  5844, -3021,  6355),
    TRAJECTORY_POS(37, /*pos*/  2955, -3394,  6255),
    TRAJECTORY_POS(38, /*pos*/  1788, -3512,  5988),
    TRAJECTORY_POS(39, /*pos*/   -89, -3720,  5188),
    TRAJECTORY_POS(40, /*pos*/  -732, -3910,  4144),
    TRAJECTORY_POS(41, /*pos*/  -722, -4095,  2688),
    TRAJECTORY_POS(42, /*pos*/ -1333, -4198,  1255),
    TRAJECTORY_POS(43, /*pos*/ -2377, -4302,   788),
    TRAJECTORY_POS(44, /*pos*/ -4500, -4684,   277),
    TRAJECTORY_POS(45, /*pos*/ -5466, -4790,    11),
    TRAJECTORY_POS(46, /*pos*/ -6044, -4860,  -333),
    TRAJECTORY_POS(47, /*pos*/ -6388, -5079, -1155),
    TRAJECTORY_POS(48, /*pos*/ -6510, -5389, -2666),
    TRAJECTORY_POS(49, /*pos*/ -6476, -5555, -3622),
    TRAJECTORY_POS(50, /*pos*/ -6488, -5684, -4777),
    TRAJECTORY_POS(51, /*pos*/ -6488, -5829, -6088),
    TRAJECTORY_POS(52, /*pos*/ -6507, -5841, -6400),
    TRAJECTORY_END(),
};
''',
}

#Some tweaks are logical ops, others just are literals, this is for Ls
INHERIT = (lambda x:x[0])

#repo doesn't time properly
DOUBLE = (lambda x:int(1.5*x[0]))
#a nop'd JAL
NOP = (lambda x:(x[0]==0)&1)
#macros for when you widescreen
GFXRECTLEFT =  (lambda x:'GFX_DIMENSIONS_RECT_FROM_LEFT_EDGE({})'.format(x[0]))
GFXRECTRIGHT =  (lambda x:'GFX_DIMENSIONS_RECT_FROM_RIGHT_EDGE({})'.format(320-x[0]))

FLOATUPPER = (lambda x:str(struct.unpack(">f",struct.pack(">L",x[0]<<16))[0])+'f')

unkDefaults = """//The following are not exported from the rom, but are placed here for user convenience
#define SHOW_STAR_MILESTONES 0
#define TOAD_STAR_1_DIALOG DIALOG_082
#define TOAD_STAR_2_DIALOG DIALOG_076
#define TOAD_STAR_3_DIALOG DIALOG_083
#define TOAD_STAR_1_DIALOG_AFTER DIALOG_154
#define TOAD_STAR_2_DIALOG_AFTER DIALOG_155
#define TOAD_STAR_3_DIALOG_AFTER DIALOG_156
//whether coins are 3d or not. Changes bhv scripts and pause menu reds rendering
#define USE3DCOINS 0
//must be manually set
#define INCLUDE_MOP 0
"""

#Format is num vals, var name, [type,len,hex locations,func]
Tweaks = [
	[1,'MARIO_START_LIVES',[">B",1,0x1001b,INHERIT]],
	[1,'INFINITE_LIVES',[">L",4,0x41918,INHERIT]],
	[1,'START_LEVEL',[">B",1,0x6d6b,INHERIT]],
	[1,'COINS_REQ_COINSTAR',[">H",2,0x8BBE,INHERIT]],
	[1,'REDS_REQ',[">H",2,0xADDDE,INHERIT]],
	[3,'EXIT_COURSE',[">H",2,0x666A,INHERIT,">H",2,0x666E,INHERIT,">H",2,0x6672,INHERIT]],
	#can fail if tweak is different than in RM
	[1,'FALL_DAMAGE',[">B",1,0x252F5,INHERIT]],
	[6,'STAR_MILESTONES',[">B",1,0xE8B54,INHERIT,">B",1,0xE8B55,INHERIT,">B",1,0xE8B56,INHERIT,">B",1,0xE8B57,INHERIT,">B",1,0xE8B58,INHERIT,">B",1,0xE8B59,INHERIT]],

	[1,'KING_BOMB_FVEL',[">H",2,0x624DA,FLOATUPPER]],
	[1,'KING_BOMB_YAWVEL',[">H",2,0x624FA,INHERIT]],
	[1,'KING_BOMB_HEALTH',[">H",2,0x622DA,INHERIT]],
	[1,'KING_WHOMP_HEALTH',[">H",2,0x81E32,INHERIT]],
	[1,'KOOPA_SPEED_RACE_END',[">H",2,0xB81D6,FLOATUPPER]],
	[1,'KOOPA_SPEED_THI',[">H",2,0xB8202,FLOATUPPER]],
	[1,'KOOPA_SPEED_BOB',[">H",2,0xB821A,FLOATUPPER]],

	[1,'MIPS1_STAR_REQ',[">B",1,0xB34CB,INHERIT]],
	[1,'MIPS2_STAR_REQ',[">B",1,0xB3523,INHERIT]],
	[1,'TOAD_STAR_1_REQUIREMENT',[">H",2,0x3199A,INHERIT]],
	[1,'TOAD_STAR_2_REQUIREMENT',[">H",2,0x319CE,INHERIT]],
	[1,'TOAD_STAR_3_REQUIREMENT',[">H",2,0x31A02,INHERIT]],
	# IDK yet. So func will just always return some defualt value
	# [1,'SHOW_STAR_MILESTONES',[]],
	# [1,'TOAD_STAR_1_DIALOG',[]],
	# [1,'TOAD_STAR_2_DIALOG',[]],
	# [1,'TOAD_STAR_3_DIALOG',[]],
	# [1,'TOAD_STAR_1_DIALOG_AFTER',[]],
	# [1,'TOAD_STAR_2_DIALOG_AFTER',[]],
	# [1,'TOAD_STAR_3_DIALOG_AFTER',[]],
	[1,'SLIDE_TIME',[">H",2,0xB7A6,INHERIT]],
	[1,'MC_TIME',[">H",2,0xAC0A,DOUBLE]],
	[1,'WC_TIME',[">H",2,0xAC22,DOUBLE]],
	[1,'VC_TIME',[">H",2,0xABF2,DOUBLE]],
	[1,'MC_LEVEL_TIME',[">H",2,0x4A5E,DOUBLE]],
	[1,'WC_LEVEL_TIME',[">H",2,0x4A7A,DOUBLE]],
	[1,'VC_LEVEL_TIME',[">H",2,0x4A96,DOUBLE]],
	[1,'HUD_LIVES_MARIO_X',[">H",2,0x9E756,GFXRECTLEFT]],
	[1,'HUD_LIVES_MARIO_Y',[">H",2,0x9E75E,INHERIT]],
	[1,'HUD_LIVES_CROSS_X',[">H",2,0x9E76A,GFXRECTLEFT]],
	[1,'HUD_LIVES_CROSS_Y',[">H",2,0x9E772,INHERIT]],
	[1,'HUD_LIVES_NUM_X',[">H",2,0x9E786,GFXRECTLEFT]],
	[1,'HUD_LIVES_NUM_Y',[">H",2,0x9E78E,INHERIT]],
	[1,'HUD_COINS_X',[">H",2,0x9E7BA,GFXRECTLEFT]],
	[1,'HUD_COINS_Y',[">H",2,0x9E7C2,INHERIT]],
	[1,'HUD_COINS_CROSS_X',[">H",2,0x9E7CE,GFXRECTLEFT]],
	[1,'HUD_COINS_CROSS_Y',[">H",2,0x9E7D6,INHERIT]],
	[1,'HUD_COINS_NUM_X',[">H",2,0x9E7EA,GFXRECTLEFT]],
	[1,'HUD_COINS_NUM_Y',[">H",2,0x9E7F2,INHERIT]],
	[1,'HUD_STARS_X',[">H",2,0x9E86E,GFXRECTRIGHT]],
	[1,'HUD_STARS_Y',[">H",2,0x9E876,INHERIT]],
	[1,'HUD_STARS_CROSS_X',[">H",2,0x9E892,GFXRECTRIGHT]],
	[1,'HUD_STARS_CROSS_Y',[">H",2,0x9E89A,INHERIT]],
	[1,'HUD_STARS_NUM_X',[">H",2,0x9E8BA,GFXRECTRIGHT]],
	[1,'HUD_STARS_NUM_Y',[">H",2,0x9E8CA,INHERIT]],
	[1,'HUD_TIME_X',[">H",2,0x9EA22,GFXRECTRIGHT]],
	[1,'HUD_TIME_Y',[">H",2,0x9EA2A,INHERIT]],
	[1,'HUD_TIME_MIN_X',[">H",2,0x9EA36,GFXRECTRIGHT]],
	[1,'HUD_TIME_MIN_A_X',[">H",2,0x9EAAE,GFXRECTRIGHT]],
	[1,'HUD_TIME_SEC_X',[">H",2,0x9EA4E,GFXRECTRIGHT]],
	[1,'HUD_TIME_SEC_AA_X',[">H",2,0x9EAC2,GFXRECTRIGHT]],
	[1,'HUD_TIME_FSEC_X',[">H",2,0x9EA66,GFXRECTRIGHT]],
	[1,'HUD_TIME_A_Y',[">H",2,0x9EAB2,INHERIT]],
	[1,'POWER_X',[">H",2,0xED5F2,INHERIT]],
	[1,'POWER_Y',[">H",2,0xED5F4,INHERIT]],
	[1,'SHOW_STARS',[">B",1,0x9EDE1,INHERIT]],
	[1,'SHOW_COINS',[">B",1,0x9EDc9,INHERIT]],
	[1,'SHOW_LIVES',[">B",1,0x9EDB1,INHERIT]],
	[1,'SHOW_CAM',[">B",1,0x9EE19,INHERIT]],
	[1,'SHOW_TIME',[">B",1,0x9EE31,INHERIT]],
]

SoundBanks = {
	0:"00",
	1:"01_terrain",
	2:"02_water",
	3:"03",
	4:"04",
	5:"05",
	6:"06",
	7:"07",
	8:"08_mario",
	9:"09",
	10:"0A_mario_peach",
	11:"0B",
	12:"0C",
	13:"0D",
	14:"0E",
	15:"0F",
	16:"10",
	17:"11",
	18:"12",
	19:"13",
	20:"14_piranha_music_box",
	21:"15",
	22:"16_course_start",
	23:"17",
	24:"18",
	25:"19",
	26:"1A",
	27:"1B",
	28:"1C_endless_stairs",
	29:"1D_bowser_organ",
	30:"1E",
	31:"1F",
	32:"20",
	33:"21",
	34:"22",
	35:"23",
	36:"24",
	37:"25",
}

TitleStrFormatter = '''#include <PR/ultratypes.h>
#include <PR/gbi.h>

#include "macros.h"
#include "types.h"

#include "make_const_nonconst.h"
#include "textureNew.inc.c"
#include "custom.model.inc.c"
const Gfx intro_seg7_dl_0700B3A0[] = {{
gsSPDisplayList({})
}};
const Gfx intro_seg7_dl_0700C6A0[] = {{
gsSPEndDisplayList()
}};
// 0x0700C790
const f32 intro_seg7_table_0700C790[] = {{
    0.016000f, 0.052000f, 0.002500f, 0.148300f,
    0.189200f, 0.035200f, 0.471600f, 0.525300f,
    0.116600f, 0.875800f, 0.947000f, 0.222100f,
    1.250500f, 1.341300f, 0.327000f, 1.485400f,
    1.594900f, 0.406500f, 1.230500f, 1.563700f,
    0.464300f, 0.913900f, 1.351300f, 0.520200f,
    1.022900f, 1.216100f, 0.574400f, 1.122300f,
    1.097200f, 0.627000f, 1.028300f, 0.955600f,
    0.678100f, 0.934800f, 1.049400f, 0.727700f,
    0.994200f, 1.005200f, 0.775900f, 1.070200f,
    0.961500f, 0.822900f, 0.995600f, 0.995000f,
    0.868700f, 0.991600f, 1.005700f, 0.913500f,
    1.016500f, 0.985200f, 0.957200f, 0.985200f,
    1.007100f, 1.000000f, 0.999900f, 0.999800f,
    1.010600f, 1.000000f, 1.000000f, 1.000000f,
}};

// 0x0700C880
const f32 intro_seg7_table_0700C880[] = {{
    1.000000f, 1.000000f, 1.000000f, 0.987300f,
    0.987300f, 0.987300f, 0.951400f, 0.951400f,
    0.951400f, 0.896000f, 0.896000f, 0.896000f,
    0.824600f, 0.824600f, 0.824600f, 0.740700f,
    0.740700f, 0.740700f, 0.648000f, 0.648000f,
    0.648000f, 0.549900f, 0.549900f, 0.549900f,
    0.450100f, 0.450100f, 0.450100f, 0.352000f,
    0.352000f, 0.352000f, 0.259300f, 0.259300f,
    0.259300f, 0.175400f, 0.175400f, 0.175400f,
    0.104000f, 0.104000f, 0.104000f, 0.048600f,
    0.048600f, 0.048600f, 0.012800f, 0.012800f,
    0.012800f, 0.000000f, 0.000000f, 0.000000f,
}};'''

MacroNames = {
	31:'macro_yellow_coin',
	32:'macro_yellow_coin_2',
	33:'macro_moving_blue_coin',
	34:'macro_sliding_blue_coin',
	35:'macro_red_coin',
	36:'macro_empty_5',
	37:'macro_coin_line_horizontal',
	38:'macro_coin_ring_horizontal',
	39:'macro_coin_arrow',
	40:'macro_coin_line_horizontal_flying',
	41:'macro_coin_line_vertical',
	42:'macro_coin_ring_horizontal_flying',
	43:'macro_coin_ring_vertical',
	44:'macro_coin_arrow_flying',
	45:'macro_hidden_star_trigger',
	46:'macro_empty_15',
	47:'macro_empty_16',
	48:'macro_empty_17',
	49:'macro_empty_18',
	50:'macro_empty_19',
	51:'macro_fake_star',
	52:'macro_wooden_signpost',
	53:'macro_cannon_closed',
	54:'macro_bobomb_buddy_opens_cannon',
	55:'macro_butterfly',
	56:'macro_bouncing_fireball_copy',
	57:'macro_fish_group_3',
	58:'macro_fish_group',
	59:'macro_unknown_28',
	60:'macro_hidden_1up_in_pole',
	61:'macro_huge_goomba',
	62:'macro_tiny_goomba',
	63:'macro_goomba_triplet_spawner',
	64:'macro_goomba_quintuplet_spawner',
	65:'macro_sign_on_wall',
	66:'macro_chuckya',
	67:'macro_cannon_open',
	68:'macro_goomba',
	69:'macro_homing_amp',
	70:'macro_circling_amp',
	71:'macro_unknown_40',
	72:'macro_unknown_41',
	73:'macro_free_bowling_ball',
	74:'macro_snufit',
	75:'macro_recovery_heart',
	76:'macro_1up_sliding',
	77:'macro_1up',
	78:'macro_1up_jump_on_approach',
	79:'macro_hidden_1up',
	80:'macro_hidden_1up_trigger',
	81:'macro_1up_2',
	82:'macro_1up_3',
	83:'macro_empty_52',
	84:'macro_blue_coin_switch',
	85:'macro_hidden_blue_coin',
	86:'macro_wing_cap_switch',
	87:'macro_metal_cap_switch',
	88:'macro_vanish_cap_switch',
	89:'macro_yellow_cap_switch',
	90:'macro_unknown_59',
	91:'macro_box_wing_cap',
	92:'macro_box_metal_cap',
	93:'macro_box_vanish_cap',
	94:'macro_box_koopa_shell',
	95:'macro_box_one_coin',
	96:'macro_box_three_coins',
	97:'macro_box_ten_coins',
	98:'macro_box_1up',
	99:'macro_box_star_1',
	100:'macro_breakable_box_no_coins',
	101:'macro_breakable_box_three_coins',
	102:'macro_pushable_metal_box',
	103:'macro_breakable_box_small',
	104:'macro_floor_switch_hidden_objects',
	105:'macro_hidden_box',
	106:'macro_hidden_object_2',
	107:'macro_hidden_object_3',
	108:'macro_breakable_box_giant',
	109:'macro_koopa_shell_underwater',
	110:'macro_box_1up_running_away',
	111:'macro_empty_80',
	112:'macro_bullet_bill_cannon',
	113:'macro_heave_ho',
	114:'macro_empty_83',
	115:'macro_thwomp',
	116:'macro_fire_spitter',
	117:'macro_fire_fly_guy',
	118:'macro_jumping_box',
	119:'macro_butterfly_triplet',
	120:'macro_butterfly_triplet_2',
	121:'macro_empty_90',
	122:'macro_empty_91',
	123:'macro_empty_92',
	124:'macro_bully',
	125:'macro_bully_2',
	126:'macro_empty_95',
	127:'macro_unknown_96',
	128:'macro_bouncing_fireball',
	129:'macro_flamethrower',
	130:'macro_empty_99',
	131:'macro_empty_100',
	132:'macro_empty_101',
	133:'macro_empty_102',
	134:'macro_empty_103',
	135:'macro_empty_104',
	136:'macro_empty_105',
	137:'macro_wooden_post',
	138:'macro_water_bomb_spawner',
	139:'macro_enemy_lakitu',
	140:'macro_bob_koopa_the_quick',
	141:'macro_koopa_race_endpoint',
	142:'macro_bobomb',
	143:'macro_water_bomb_cannon_copy',
	144:'macro_bobomb_buddy_opens_cannon_copy',
	145:'macro_water_bomb_cannon',
	146:'macro_bobomb_still',
	147:'macro_empty_116',
	148:'macro_empty_117',
	149:'macro_empty_118',
	150:'macro_empty_119',
	151:'macro_empty_120',
	152:'macro_empty_121',
	153:'macro_empty_122',
	154:'macro_unknown_123',
	155:'macro_empty_124',
	156:'macro_unagi',
	157:'macro_sushi',
	158:'macro_empty_127',
	159:'macro_empty_128',
	160:'macro_empty_129',
	161:'macro_empty_130',
	162:'macro_empty_131',
	163:'macro_empty_132',
	164:'macro_empty_133',
	165:'macro_empty_134',
	166:'macro_empty_135',
	167:'macro_empty_136',
	168:'macro_unknown_137',
	169:'macro_tornado',
	170:'macro_pokey',
	171:'macro_pokey_copy',
	172:'macro_tox_box',
	173:'macro_empty_142',
	174:'macro_empty_143',
	175:'macro_empty_144',
	176:'macro_empty_145',
	177:'macro_empty_146',
	178:'macro_empty_147',
	179:'macro_empty_148',
	180:'macro_empty_149',
	181:'macro_empty_150',
	182:'macro_monty_mole_2',
	183:'macro_monty_mole',
	184:'macro_monty_mole_hole',
	185:'macro_fly_guy',
	186:'macro_empty_155',
	187:'macro_wiggler',
	188:'macro_empty_157',
	189:'macro_empty_158',
	190:'macro_empty_159',
	191:'macro_empty_160',
	192:'macro_empty_161',
	193:'macro_empty_162',
	194:'macro_empty_163',
	195:'macro_empty_164',
	196:'macro_spindrift',
	197:'macro_mr_blizzard',
	198:'macro_mr_blizzard_copy',
	199:'macro_empty_168',
	200:'macro_small_penguin',
	201:'macro_tuxies_mother',
	202:'macro_tuxies_mother_copy',
	203:'macro_mr_blizzard_2',
	204:'macro_empty_173',
	205:'macro_empty_174',
	206:'macro_empty_175',
	207:'macro_empty_176',
	208:'macro_empty_177',
	209:'macro_empty_178',
	210:'macro_empty_179',
	211:'macro_empty_180',
	212:'macro_empty_181',
	213:'macro_empty_182',
	214:'macro_empty_183',
	215:'macro_empty_184',
	216:'macro_empty_185',
	217:'macro_empty_186',
	218:'macro_empty_187',
	219:'macro_empty_188',
	220:'macro_haunted_chair_copy',
	221:'macro_haunted_chair',
	222:'macro_haunted_chair_copy2',
	223:'macro_boo',
	224:'macro_boo_copy',
	225:'macro_boo_group',
	226:'macro_boo_with_cage',
	227:'macro_beta_key',
	228:'macro_empty_197',
	229:'macro_empty_198',
	230:'macro_empty_199',
	231:'macro_empty_200',
	232:'macro_empty_201',
	233:'macro_empty_202',
	234:'macro_empty_203',
	235:'macro_empty_204',
	236:'macro_empty_205',
	237:'macro_empty_206',
	238:'macro_empty_207',
	239:'macro_empty_208',
	240:'macro_empty_209',
	241:'macro_empty_210',
	242:'macro_empty_211',
	243:'macro_empty_212',
	244:'macro_empty_213',
	245:'macro_empty_214',
	246:'macro_empty_215',
	247:'macro_empty_216',
	248:'macro_empty_217',
	249:'macro_empty_218',
	250:'macro_empty_219',
	251:'macro_empty_220',
	252:'macro_empty_221',
	253:'macro_empty_222',
	254:'macro_empty_223',
	255:'macro_empty_224',
	256:'macro_empty_225',
	257:'macro_empty_226',
	258:'macro_empty_227',
	259:'macro_empty_228',
	260:'macro_empty_229',
	261:'macro_empty_230',
	262:'macro_empty_231',
	263:'macro_empty_232',
	264:'macro_empty_233',
	265:'macro_chirp_chirp',
	266:'macro_seaweed_bundle',
	267:'macro_beta_chest',
	268:'macro_water_mine',
	269:'macro_fish_group_4',
	270:'macro_fish_group_2',
	271:'macro_jet_stream_ring_spawner',
	272:'macro_jet_stream_ring_spawner_copy',
	273:'macro_skeeter',
	274:'macro_clam_shell',
	275:'macro_empty_244',
	276:'macro_empty_245',
	277:'macro_empty_246',
	278:'macro_empty_247',
	279:'macro_empty_248',
	280:'macro_empty_249',
	281:'macro_empty_250',
	282:'macro_ukiki',
	283:'macro_ukiki_2',
	284:'macro_piranha_plant',
	285:'macro_empty_254',
	286:'macro_whomp',
	287:'macro_chain_chomp',
	288:'macro_empty_257',
	289:'macro_koopa',
	290:'macro_koopa_shellless',
	291:'macro_wooden_post_copy',
	292:'macro_fire_piranha_plant',
	293:'macro_fire_piranha_plant_2',
	294:'macro_thi_koopa_the_quick',
	295:'macro_empty_264',
	296:'macro_empty_265',
	297:'macro_empty_266',
	298:'macro_empty_267',
	299:'macro_empty_268',
	300:'macro_empty_269',
	301:'macro_empty_270',
	302:'macro_empty_271',
	303:'macro_empty_272',
	304:'macro_empty_273',
	305:'macro_empty_274',
	306:'macro_empty_275',
	307:'macro_empty_276',
	308:'macro_empty_277',
	309:'macro_empty_278',
	310:'macro_empty_279',
	311:'macro_empty_280',
	312:'macro_moneybag',
	313:'macro_empty_282',
	314:'macro_empty_283',
	315:'macro_empty_284',
	316:'macro_empty_285',
	317:'macro_empty_286',
	318:'macro_empty_287',
	319:'macro_empty_288',
	320:'macro_swoop',
	321:'macro_swoop_2',
	322:'macro_mr_i',
	323:'macro_scuttlebug_spawner',
	324:'macro_scuttlebug',
	325:'macro_empty_294',
	326:'macro_empty_295',
	327:'macro_empty_296',
	328:'macro_empty_297',
	329:'macro_empty_298',
	330:'macro_empty_299',
	331:'macro_empty_300',
	332:'macro_empty_301',
	333:'macro_empty_302',
	334:'macro_unknown_303',
	335:'macro_empty_304',
	336:'macro_empty_305',
	337:'macro_empty_306',
	338:'macro_empty_307',
	339:'macro_empty_308',
	340:'macro_empty_309',
	341:'macro_empty_310',
	342:'macro_empty_311',
	343:'macro_empty_312',
	344:'macro_ttc_rotating_cube',
	345:'macro_ttc_rotating_prism',
	346:'macro_ttc_pendulum',
	347:'macro_ttc_large_treadmill',
	348:'macro_ttc_small_treadmill',
	349:'macro_ttc_push_block',
	350:'macro_ttc_rotating_hexagon',
	351:'macro_ttc_rotating_triangle',
	352:'macro_ttc_pit_block',
	353:'macro_ttc_pit_block_2',
	354:'macro_ttc_elevator_platform',
	355:'macro_ttc_clock_hand',
	356:'macro_ttc_spinner',
	357:'macro_ttc_small_gear',
	358:'macro_ttc_large_gear',
	359:'macro_ttc_large_treadmill_2',
	360:'macro_ttc_small_treadmill_2',
	361:'macro_empty_330',
	362:'macro_empty_331',
	363:'macro_empty_332',
	364:'macro_empty_333',
	365:'macro_empty_334',
	366:'macro_empty_335',
	367:'macro_empty_336',
	368:'macro_empty_337',
	369:'macro_empty_338',
	370:'macro_box_star_2',
	371:'macro_box_star_3',
	372:'macro_box_star_4',
	373:'macro_box_star_5',
	374:'macro_box_star_6',
	375:'macro_empty_344',
	376:'macro_empty_345',
	377:'macro_empty_346',
	378:'macro_empty_347',
	379:'macro_empty_348',
	380:'macro_empty_349',
	381:'macro_bits_sliding_platform',
	382:'macro_bits_twin_sliding_platforms',
	383:'macro_bits_unknown_352',
	384:'macro_bits_octagonal_platform',
	385:'macro_bits_staircase',
	386:'macro_empty_355',
	387:'macro_empty_356',
	388:'macro_bits_ferris_wheel_axle',
	389:'macro_bits_arrow_platform',
	390:'macro_bits_seesaw_platform',
	391:'macro_bits_tilting_w_platform',
	392:'macro_empty_361',
	393:'macro_empty_362',
	394:'macro_empty_363',
	395:'macro_empty_364',
	396:'macro_empty_365'
}


#MOP is the devil and I hate it, but it is common enough to dedicate
#hardcoded addresses to, well thats the only way to know where it is though
#key=modelID,bhv value=Name,model RAMaddr


MOPObjAddr = {
(0xF0,0x130050D0):["FlipBlock_MOP",0x0302272C],
(0x2F,0x13000278):["Flipswap_Platform_MOP",0x005F9AC0],
(0x2A,0x130005D8):["Flipswitch_Panel_MOP",0x005F9FE0],
(0x2B,0x13000CFC):["Green_Switchboard_MOP",0x005FD8B0],
(0x2D,0x13000D24):["Moving_Rotating_Block_MOP",0x00603670],
(0x2E,0x13000D50):["Checkpoint_Flag_MOP",0x00606660],
(0,0x13000D50):["Checkpoint_Flag_MOP",0x00606660], #repeated because its an often enough case
(0x7B,0x13000174):["Noteblock_MOP",0x0301DBF8],
(0xCF,0x1300512C):["PSwitch_MOP",0x0F0004CC],
(0x99,0x1300064C):["Sandblock_MOP",0x030225E4],
(0x9B,0x13004218):["Shell_1_MOP",0x0F000ADC],
(0x9D,0x13004218):["Shell_2_MOP",0x0F000B08],
(0x98,0x13000624):["Shrink_Platform_MOP",0x030212F4],
(0x92,0x130005B4):["Spring_MOP",0x0301FC98],
(0xF2,0x13003AE0):["Switchblock_Switch_MOP",0x03022708],
(0xF1,0x13004EA0):["Switchblock_MOP",0x030226D4],
# (0xB5,0x13001608):["Trampoline_MOP",0x0C000000], //this is included in repo already
(0x54,0x130023D0):["Beta_Blarrg_MOP",0x0C000224],
(0,0x130002A0):["Flipswitch_Panel_StarSpawn_MOP",None],
(0,0x13005104):["Jukebox_MOP",None],
(0,0x130050B4):["Emitter_MOP",None],
}


#specifically for detecting MOP models, basically links model loads (ID+addr to a label).
MOPModels={
(240,50472748):'FlipBlock_MOP',
(47,6265536):'Flipswap_Platform_MOP',
(0x30,0x5f8560):'Flipswap_Platform_Border_MOP',
(42,6266848):'Flipswitch_Panel_MOP',
(43,6281392):'Green_Switchboard_MOP',
(0x2C,0x600460):'Green_Switchboard_Gears_MOP',
(45,6305392):'Moving_Rotating_Block_MOP',
(46,6317664):'Checkpoint_Flag_MOP',
(0,6317664):'Checkpoint_Flag_MOP',
(123,50453496):'Noteblock_MOP',
(207,251659468):'PSwitch_MOP',
(153,50472420):'Sandblock_MOP',
(155,251661020):'Shell_1_MOP',
(157,251661064):'Shell_2_MOP',
(152,50467572):'Shrink_Platform_MOP',
(0x97,0x3020860):'Shrink_Platform_Border_MOP',
(146,50461848):'Spring_MOP',
(242,50472712):'Switchblock_Switch_MOP',
(241,50472660):'Switchblock_MOP',
(84,201327140):'Beta_Blarrg_MOP'
}

Bdatahead = """//Include this file at the bottom of behavior_data.c\n"""


ScrollTargetHead="""#include <PR/ultratypes.h>
#include "sm64.h"
#include "types.h"

//Q. Why does this exist instead of just directly referencing VBs?
//A. Because gcc is dumb and will seg fault if you reference a VB by abstracting it through a bparam
//instead of directly refencing it, causing this horrible shit.
"""